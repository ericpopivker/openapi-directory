openapi: 3.0.1
info:
  version: '1.0'
  title: QuickBooks Online API
paths:
  /invoice:
    post:
      description: 'Create an Invoice'
      summary: Invoice-Create
      tags:
      - Invoice
      operationId: InvoicePost
      requestBody:
        description: ''
        content:
          application/json:
            schema:
             $ref: '#/components/schemas/InvoiceCreateRequest'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponse'
  /customer:
    post:
      description: Create a customer
      summary: Customer-Create
      tags:
      - Customer
      operationId: CustomerPost
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreateRequest'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
  '/customer/{id}':
    get:
      description: 'Retrieves the details of a Customer object that has been previously created.'
      tags:
        - Customer
      summary: Customer-Read
      operationId: CustomerGet
      parameters:
        - name: id
          in: path
          description: Customer Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
  /item:
    post:
      description: 'POST: Create an Item'
      summary: Item-Create
      tags:
      - Item
      operationId: ItemPost
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemCreateRequest'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'

  /item?minorversion=4:
    post:
      description: 'Create category.  Categories are only available companies that have enabled Categories.'
      tags: 
      - Category
      summary: Category-Create
      operationId: categoryPost
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreateRequest'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryCreateResponse'


  /payment:
    post:
      description: 'Create Payment'
      tags:
        - Payment
      summary: Payment-Create
      operationId: PaymentPost
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreateRequest'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
  

components:
  schemas:

# ----- Customer create
    CustomerCreateRequest:
      type: object
      required:
      - DisplayName
      properties:
        DisplayName:
          type: string
          description: 'The name of the person or organization as displayed.'
        CompanyName:
          type: string
          description: The name of the company associated with the person or organization.
        PrimaryEmailAddr:
          type: object
          description: 'Primary email address. '
          required:
            - Address
          properties:
            Address:
              type: string
        Suffix:
          type: string
          description: 'Suffix of the name. For example, Jr. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        Title:
          type: string
          description: 'Title of the person. '
        MiddleName:
          type: string
          description: 'Middle name of the person. '
        FamilyName:
          type: string
          description: 'Family name or the last name of the person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        GivenName:
          type: string
          description: 'Given name or first name of a person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'








        
        
        
        ResaleNum:
          type: string
          description: Resale number or some additional info about the customer.
        PreferredDeliveryMethod:
          type: string
          description: 'Preferred delivery method. Values are Print, Email, or None.'
        
        CustomerTypeRef:
          type: object
          properties:
            value:
              type: string
              x-display-name:
              - Customer Type ID

        Fax:
          type: object
          description: 'Fax number. '
          $ref: '#/components/schemas/FreeFormNumber'
        BillWithParent:
          type: boolean
          description: 'If true, this Customer object is billed with its parent. '


        
        Mobile:
          type: string
          description: 'Mobile phone number. '
          $ref: '#/components/schemas/FreeFormNumber'
        Job:
          type: boolean
          description: 'If true, this is a Job or sub-customer. If false or null, this is a top level customer, not a Job or sub-customer.'
        BalanceWithJobs:
          type: number
          description: Cumulative open balance amount for the Customer (or Job) and all its sub-jobs. Cannot be written to QuickBooks.
          x-attributes:
          - hide
        PrimaryPhone:
          type: string
          description: 'Primary phone number. '
          $ref: '#/components/schemas/FreeFormNumber'
        OpenBalanceDate:
          type: string
          description: Date of the Open Balance for the create operation. Write-on-create.
          format: date:yyyy-MM-dd
        Taxable:
          type: boolean
          description: 'If true, transactions for this customer are taxable. Default behavior with minor version 10 and above: true, if DefaultTaxCodeRef is defined or false if TaxExemptionReasonId is set.'
        AlternatePhone:
          type: string
          description: 'Alternate phone number. '
          $ref: '#/components/schemas/FreeFormNumber'
        Notes:
          type: string
          description: Free form text describing the Customer.
          x-attributes:
          - textarea
         # minorversion 10
        TaxExemptionReasonId:
          type: number
          description: 'The tax exemption reason associated with this customer object. Applicable if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) for the company.'
          x-attributes:
          - hide 
        WebAddr:
          type: object
          properties:
            URI: 
              type: string
          description: 'Website address. '
        Active:
          type: boolean
          description: 'If true, this entity is currently enabled for use by QuickBooks. If there is an amount in Customer.Balance when setting this Customer object to inactive through the QuickBooks UI, a CreditMemo balancing transaction is created for the amount.'
        Balance:
          type: number
          description: 'Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer. Write-on-create.'
        ShipAddr:
          type: string
          description: 'Default shipping address. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
          $ref: '#/components/schemas/Address'
        IsProject:
          type: boolean
          description: 'If true, indicates this is a Project.'
        
        
        PrintOnCheckName:
          type: string
          description: 'Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Constraints: Cannot be removed with sparse update.'
        BillAddr:
          type: string
          description: 'Default billing address. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
          $ref: '#/components/schemas/Address'
# ---- Customer respose

    CustomerResponse:
      type: object
      properties:
        Customer:
          $ref: '#/components/schemas/Customer'

# ----- Customer object

    Customer:
      type: object
      x-base-schema:
        - true
      properties:
        Id:
          type: string
          description: 'Unique identifier for this object. Sort order is ASC by default.'
        SyncToken:
          type: string
          description: 'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.'
        
        
        DisplayName:
          type: string
          description: 'The name of the person or organization as displayed. Must be unique across all Customer, Vendor, and Employee objects. Cannot be removed with sparse update. If not supplied, the system generates DisplayName by concatenating customer name components supplied in the request from the following list: Title, GivenName, MiddleName, FamilyName, and Suffix.'
        Title:
          type: string
          description: 'Title of the person. This tag supports i18n, all locales. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        GivenName:
          type: string
          description: 'Given name or first name of a person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        MiddleName:
          type: string
          description: 'Middle name of the person. The person can have zero or more middle names. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        Suffix:
          type: string
          description: 'Suffix of the name. For example, Jr. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        FamilyName:
          type: string
          description: 'Family name or the last name of the person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'         
        PrimaryEmailAddr:
          type: object
          description: 'Primary email address. '
          required:
            - Address
          properties:
            Address:
              type: string
        ResaleNum:
          type: string
          description: Resale number or some additional info about the customer.
          
        PreferredDeliveryMethod:
          type: string
          description: 'Preferred delivery method. Values are Print, Email, or None.'
          enum: [Print, Email, None]
        CustomerTypeRef:
          type: object
          properties:
            value:
              type: string
              x-display-name:
              - Customer Type ID
          description: Reference to the customer type assigned to a customer. 

        Fax:
          type: object
          description: 'Fax number. '
          $ref: '#/components/schemas/FreeFormNumber'
        BillWithParent:
          type: boolean
          description: 'If true, this Customer object is billed with its parent. '
        
        Mobile:
          type: string
          description: 'Mobile phone number. '  
          $ref: '#/components/schemas/FreeFormNumber'
        Job:
          type: boolean
          description: 'If true, this is a Job or sub-customer. If false or null, this is a top level customer, not a Job or sub-customer.'
        BalanceWithJobs:
          type: number
          description: Cumulative open balance amount for the Customer (or Job) and all its sub-jobs. Cannot be written to QuickBooks.
          x-attributes:
          - hide
        PrimaryPhone:
          type: string
          description: 'Primary phone number. '
          $ref: '#/components/schemas/FreeFormNumber'
        OpenBalanceDate:
          type: string
          description: Date of the Open Balance for the create operation. Write-on-create.
        Taxable:
          type: boolean
          description: 'If true, transactions for this customer are taxable. Default behavior with minor version 10 and above: true, if DefaultTaxCodeRef is defined or false if TaxExemptionReasonId is set.'
        AlternatePhone:
          type: string
          description: 'Alternate phone number. '
          $ref: '#/components/schemas/FreeFormNumber'
        MetaData:
          type: object
          $ref: '#/components/schemas/MetaData'
        Notes:
          type: string
        WebAddr:
          type: object
          properties:
            URI: 
              type: string
          description: 'Website address. '
        Active:
          type: boolean
          description: 'If true, this entity is currently enabled for use by QuickBooks. If there is an amount in Customer.Balance when setting this Customer object to inactive through the QuickBooks UI, a CreditMemo balancing transaction is created for the amount.'
        Balance:
          type: number
          description: 'Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer. Write-on-create.'
        ShipAddr:
          type: object
          description: 'Default shipping address. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
          $ref: '#/components/schemas/Address'
        IsProject:
          type: boolean
          description: 'If true, indicates this is a Project.'
        CompanyName:
          type: string
          description: The name of the company associated with the person or organization.
        
        PrintOnCheckName:
          type: string
          description: 'Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Constraints: Cannot be removed with sparse update.'
        BillAddr:
          type: object
          description: 'Default billing address. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
          $ref: '#/components/schemas/Address'

        FullyQualifiedName:
          type: string
          description: 'Fully qualified name of the object. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of Customer:Job:Sub-job. System generated. Limited to 5 levels.'
        
        
        
        
        
        
        Level:
          type: number
          description: 'Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be level with respect to the parent. Constraints:up to 5 levels'
        # minorversion 10
        TaxExemptionReasonId:
          type: number
          description: 'The tax exemption reason associated with this customer object. Applicable if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) for the company.'
          x-attributes:
          - hide 

        

    
# ----- Category  

    CategoryCreateRequest:
      type: object
      required:
      - Type
      - Name
      properties:
        Type:          
          type: string
          description: 'Set to Category  for type of line.'          
          default: Category
          enum: [Category]
        Name:
          type: string
          description: 'Name of the category.'
        SubItem:
          type: string
          default: false
          enum: [false, true]
          
        # Dev ->  If SubItem is true, then ParenRef is required.                        
        ParentRef:
          type: object
          x-display-name: 
          - Parent Item
          description: 'The immediate parent of the sub item in the hierarchical Category:Sub-category list.'
          properties:
            value: 
              type: string
              x-display-name: 
              - Parent ID 
            name: 
              type: string
              x-attributes:
              - hide



    CategoryCreateResponse:
      type: object
      properties:
        Item:
          $ref: '#/components/schemas/Item'
          
# ----- Item


        
    
    ItemCreateRequest:
      type: object
      required:
      - ItemCategoryType
      - InvStartDate
      - Name
      properties:
        Name:
          type: string
          description: 'Name of the item. This value is unique.'
        IncomeAccountRef:
          type: object
          x-display-name:
          - Income Account
          $ref: '#/components/schemas/ReferenceType'
        Type:
          type: string
          description: 'Classification that specifies the use of this item.'
          enum: [Inventory, Service, NonInventory]
        AssetAccountRef:
          type: object
          x-display-name:
          - Asset Account
          allOf:
          - $ref: '#/components/schemas/ReferenceType'
        InvStartDate:
          type: string
          description: 'Date of opening balance for the inventory transaction.'
          x-display-name:
          - Inventory start date
        ExpenseAccountRef:
          type: object
          x-display-name:
          - Expense account
          allOf:
          - $ref: '#/components/schemas/ReferenceType'

        
        QtyOnHand:
          type: number
          description: 'Current quantity of the Inventory items available for sale'
          x-display-name:
          - Initial quantity
        Sku:
          type: string
          description: 'The stock keeping unit (SKU) for this Item. '
          x-display-name:
          - SKU
        SalesTaxIncluded:
          type: boolean
          description: 'True if the sales tax is included in the item amount, and therefore is not calculated for the transaction.'      
        
        TrackQtyOnHand:
          type: boolean
          description: 'True if there is quantity on hand to be tracked.'
          x-display-name:
          - Track quantity on hand
        Description:
          type: string
          description: 'Description of the item.'
          x-attributes:
          - textarea
        SubItem:
          type: boolean
          description: 'If true, this is a sub item. If false or null, this is a top-level item. '
        ParentRef:
          type: object
          x-display-name: 
          - Parent Item
          description: 'The immediate parent of the sub item in the hierarchical Category:Sub-category list.'
          properties:
            value: 
              type: string
              x-display-name: 
              - Parent ID 
            name: 
              type: string
              x-attributes:
              - hide
        Taxable:
          type: boolean
          description: 'If true, transactions for this item are taxable.'
        ReorderPoint:
          type: number
          description: 'The minimum quantity of a particular inventory item that you need to restock at any given time.'
        PurchaseDesc:
          type: string
          description: 'Purchase description for the item.'
          x-display-name:
          - Purchase description
          x-attributes:
          - textarea
        Active:
          type: boolean
          description: 'If true, the object is currently enabled for use by QuickBooks.'
        PurchaseCost:
          type: number
          description: 'Amount paid when buying or ordering the item, as expressed in the home currency.'
        
        UnitPrice:
          type: number
          description: 'Corresponds to the Price/Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item.'
       
        
        PurchaseTaxIncluded:         
          type: boolean
          description: 'True if the purchase tax is included in the item amount, and therefore is not calculated for the transaction.'
        
        # minorVersion: 3
        ItemCategoryType:
          x-attributes:
          - hide
          type: string
          description: 'Classification that specifies the use of this item. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Read-only after object is created. Valid values include: Product and Service.'
        
        # minorVersion: 3
        AbatementRate:
          x-attributes:
          - hide
          type: number
          description: 'Sales tax abatement rate for India locales.'

        # minorVersion: 3
        ReverseChargeRate:
          type: number
          description: 'Sales tax reverse charge rate for India locales.'
          x-attributes:
          - hide
        #minorVersion: 33
        UQCDisplayText:
          type: string
          description: 'Text to be displayed on customer''s invoice to denote the Unit of Measure (instead of the standard code).'
          x-attributes:
          - hide
        
        # minorVersion: 33
        UQCId:
          type: string
          description: 'Id of Standard Unit of Measure (UQC:Unique Quantity Code) of the item according to GST rule. UQCId should be one of the following ids: '
          x-attributes:
          - hide
        # minorVersion: 3
        ServiceType:
          type: string
          description: 'Sales tax service type for India locales. '
          x-attributes:
          - hide
        
    ItemResponse:
      type: object
      properties:
        Item:
          $ref: '#/components/schemas/Item'
    Item:
      type: object
      required:
      - ItemCategoryType
      - InvStartDate
      - Name
      x-base-schema:
        - true
      properties:
        Id:
          type: string
          description: 'Unique Identifier for an Intuit entity (object). Required for the update operation.'
        Name:
          type: string
          description: 'Name of the item. This value is unique.'
        SyncToken:
          type: string
          description: 'Version number of the entity. Required for the update operation.'
        InvStartDate:
          type: string
          description: 'Date of opening balance for the inventory transaction. For read operations, the date returned in this field is always the originally provided inventory start date. For update operations, the date supplied is interpreted as the inventory adjust date, is stored as such in the underlying data model, and is reflected in the QuickBooks Online UI for the object. The inventory adjust date is not exposed for read operations through the API. Required for Inventory type items.'
        Type:
          type: string
          description: 'Classification that specifies the use of this item.'
          enum: [Inventory, Service, NonInventory]
        QtyOnHand:
          type: number
          description: 'Current quantity of the Inventory items available for sale. '
        AssetAccountRef:
          type: object
          $ref: '#/components/schemas/ReferenceType'
        Sku:
          type: string
          description: 'The stock keeping unit (SKU) for this Item. This is a company-defined identifier for an item or product used in tracking inventory.'
        SalesTaxIncluded:
          type: boolean
          description: 'True if the sales tax is included in the item amount, and therefore is not calculated for the transaction.'
        TrackQtyOnHand:
          type: boolean
          description: 'True if there is quantity on hand to be tracked. Once this value is true, it cannot be updated to false. Applicable for items of type Inventory.  Not applicable for Service or NonInventory item types.'
        PurchaseTaxIncluded:
          type: boolean
          description: 'True if the purchase tax is included in the item amount, and therefore is not calculated for the transaction.'
        Description:
          type: string
          description: 'Description of the item.'
        SubItem:
          type: boolean
          description: 'If true, this is a sub item. If false or null, this is a top-level item. Creating inventory hierarchies with traditional inventory items is being phased out in lieu of using categories and sub categories.'
        ParentRef:
          type: object
          x-display-name: 
          - Parent Item
          description: 'The immediate parent of the sub item in the hierarchical Category:Sub-category list.'
          properties:
            value: 
              type: string
              x-display-name: 
              - Parent ID 
            name: 
              type: string
              x-attributes:
              - hide
        Taxable:
          type: boolean
          description: 'If true, transactions for this item are taxable. Applicable to US companies, only.'
        ReorderPoint:
          type: number
          description: 'The minimum quantity of a particular inventory item that you need to restock at any given time. The ReorderPoint value cannot be set to null for sparse updates(sparse=true). It can be set to null only for full updates.'
        PurchaseDesc:
          type: string
          description: 'Purchase description for the item.'
        MetaData:
          type: object
          $ref: '#/components/schemas/MetaData'
        Active:
          type: boolean
          description: 'If true, the object is currently enabled for use by QuickBooks.'
        PurchaseCost:
          type: number
          description: 'Amount paid when buying or ordering the item, as expressed in the home currency.'
        UnitPrice:
          type: number
          description: 'Corresponds to the Price/Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.'
        FullyQualifiedName:
          type: string
          description: 'Fully qualified name of the entity. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of Item:SubItem. Returned from an existing object and not input on a new object.Limited to 5 levels.'
        Level:
          type: string
          description: 'Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be the next level with respect to the parent. Limited to 5 levels.'
        IncomeAccountRef:
          $ref: '#/components/schemas/ReferenceType'
        





        # minorVersion: 3

        ItemCategoryType:
          type: string
          description: 'Classification that specifies the use of this item. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Read-only after object is created. Valid values include: Product and Service.'
        
        
        # minorVersion: 3
        AbatementRate:
          type: number
          description: 'Sales tax abatement rate for India locales.'
        # minorVersion: 3
        ReverseChargeRate:
          type: number
          description: 'Sales tax reverse charge rate for India locales.'
        #minorVersion: 33
        UQCDisplayText:
          type: string
          description: 'Text to be displayed on customer''s invoice to denote the Unit of Measure (instead of the standard code).'
        
        #minorVersion: 33
        UQCId:
          type: string
          description: 'Id of Standard Unit of Measure (UQC:Unique Quantity Code) of the item according to GST rule. UQCId should be one of the following ids: '
        #minorVersion: 3
        ServiceType:
          type: string
          description: 'Sales tax service type for India locales. '
        
 # ----- Invoice    
    InvoiceCreateRequest:
      type: object
      required:
      - Line
      - CustomerRef
      properties:      
        CustomerRef:
          x-display-name: 
          - Customer
          type: object
          description: 'Select a customer to make sure the righ person pays you on time'
          required:
          - value
          properties:
              value:
                x-display-name: 
                - Customer ID
                type: string
                description: 'Please enter customer ID'
              name:
                x-attributes:
                - hide 
                type: string                
                description: 'Customer DisplayName'
        EmailStatus:
          x-display-name: 
          - Email status
          type: string
          enum: [NotSet, NeedToSend, EmailSent]
          description: 'Email status of the invoice.'
        #
        # DEV-> If EmailStatus=NeedToSend, BillEmail is a required input.
        #
        BillEmail:
          x-display-name: 
          - Customer email
          type: object
          description: 'Identifies the e-mail address where the invoice is sent. You can send e-mail to more than one address by separating e-mails with comma. '
          required:
          - Address
          properties:
              Address:
                type: string
        BillEmailCc:        
          x-display-name: 
          - Cc
          x-attributes:
          - advanced
          type: object
          description: 'Identifies the carbon copy e-mail address where the invoice is sent. You can send e-mail to more than one address by separating e-mails with comma.'
          required:
          - Address
          properties:
              Address:
                type: string
        BillEmailBcc:
          x-display-name: 
          - Bcc
          x-attributes:
          - advanced
          type: object
          description: 'Identifies the blind carbon copy e-mail address where the invoice is sent. You can send e-mail to more than one address by separating e-mails with comma.'
          required:
          - Address
          properties:
              Address:
                type: string
        #For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.Sort order is ASC by default.
        TxnDate:
          x-display-name: 
          - Invoice date
          type: string
          format: date:yyyy/MM/dd          
          description: 'The date entered by the user when this transaction occurred.'
        #If date is not provided, the number of days specified in SalesTermRef added the transaction date will be used.
        DueDate:
          x-display-name: 
          - Due date
          type: string
          description: 'Date when the payment of the transaction is due. '
          format: date:YYYY-MM-DD
        Line:
          x-display-name: 
          - Lines
          type: array
          description: 'Individual line items of a transaction. '
          items:
              type: object
              $ref: '#/components/schemas/SalesItemLine'          
        #If ShipAddress not specified, and a default Customer:ShippingAddr is specified in QuickBooks for this customer, the default ship-to address will be used by QuickBooks
        #For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country. 
        #If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.
        #
        # DEV-> User should be able to select customers address, add new adddress or leave empty
        #
        ShipAddr:
          x-display-name: 
          - Shipping address
          x-attributes:
          - advanced
          type: object     
          allOf:
          - $ref: '#/components/schemas/Address'
          description: 'Identifies the address where the goods must be shipped.'        
        #If BillAddris not specified, and a default Customer:BillingAddr is specified in QuickBooks for this customer, the default bill-to address is used by QuickBooks.  For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.  If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.
        #
        #User should be able to select customers address, add new adddress or leave empty
        BillAddr:
          x-display-name: 
          - Billing address
          type: object
          allOf:
          - $ref: '#/components/schemas/Address'
          description: 'Bill-to address of the Invoice. '
        # For transactions without shipping, it represents the address where the sale took place. For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.  If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.
        ShipFromAddr:
          x-display-name: 
          - Shipping from address
          x-attributes:
          - advanced
          type: object
          allOf:
          - $ref: '#/components/schemas/Address'
          description: 'Identifies the address where the goods are shipped from.'        
        ShipDate:
          x-display-name: 
          - Shipping date
          x-attributes:
          - advanced
          type: string
          format: date:YYYY-MM-DD
          description: 'Date for delivery of goods or services. '
        TrackingNum:
          x-display-name: 
          - Tracking number
          x-attributes:
          - advanced
          type: string
          description: 'Shipping provider''s tracking number for the delivery of the goods associated with the transaction.'
        
        #
        # Dev -> Zero or more related transactions to this Invoice object. User should be able to add  tranzactions or leave empty
        #
        # Dev -> The following linked relationships are supported:
        #           Links to Estimate and TimeActivity objects can be established directly to this Invoice object with UI or with the API.
        #           Create, Read, Update, and Query operations are avaialble at the API level for these types of links. 
        #           Only one link can be made to an Estimate.
        #           Progress Invoicing is not supported via the API.
        #           
        LinkedTxn:
          x-display-name: 
          - Related transactions
          x-attributes:
          - advanced
          type: array
          items:
            type: object
            required:
            - TxnId
            - TxnType
            properties:
              TxnId:
                x-display-name: 
                - Transaction Id
                type: string
                description: 'Transaction Id of the related transaction.'
              TxnType:
                x-display-name: 
                - Transaction type 
                type: string
                enum: [ReimburseCharge, ChargeCredit,  StatementCharge, Payment, Estimate, TimeActivity]
                description: 'Transaction type of the linked object.'
              TxnLineId:
                x-display-name: 
                - Line Id 
                type: string
                description: 'The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated.'
              
        TotalAmt:
          x-attributes:
          - hide
          type: number
          description: 'Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.'
       # Dev-> Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true. 
       # If set to true, allow invoice to be paid with online bank transfers. The Free bank transfer online payment check box is checked on the QuickBooks UI for this invoice. 
       # If set to false, online bank transfers are not allowed. The Free bank transfer online payment check box is not checked on the QuickBooks UI for this invoice.      
        AllowOnlineACHPayment:
          x-attributes:
          - hide
          type: boolean
          description: 'Specifies if this invoice can be paid with online bank transfers and corresponds to the Free bank transfer online payment check box on the QuickBooks UI. '
       # Dev -> For France locale valid values include: WithinFrance FranceOverseas OutsideFranceWithEU OutsideEU For India locale, use state code values from the list below:
       # List of valid items can be found here https://developer.intuit.com/app/developer/qbo/docs/api/accounting/ecommerce/invoice#the-invoice-object
        TransactionLocationType:
          x-attributes:
          - hide
          type: string
          description: 'The account location.'
        
        
       # Dev ->  Applicable if multicurrency is enabled for the company. 
        ExchangeRate:
          x-display-name: 
          - Exchange Rate
          x-attributes:
          - advanced
          type: number
          description: 'The number of home currency units it takes to equal one unit of currency specified by CurrencyRef.'
        Deposit:
          x-attributes:
          - advanced
          type: number
          description: 'The deposit made towards this invoice.'

        GlobalTaxCalculation:
          x-display-name: 
          - Global Tax Calculation
          x-attributes:
          - advanced
          type: string
          enum: [TaxExcluded, TaxInclusive,  NotApplicable]
          description: 'Method in which tax is applied.'

        TxnTaxDetail:
          x-display-name: 
          - Transaction tax details
          x-attributes:
          - advanced
          type: object
          $ref: '#/components/schemas/TxnTaxDetail'
          description: 'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See Global tax model for more information about this element. If sales tax is disabled (Preferences.TaxPrefs.UsingSalesTax is set to false) then TxnTaxDetail is ignored and not stored. '
        AllowOnlineCreditCardPayment:
          x-display-name: 
          - Allow online credit card payment
          type: boolean
          description: 'Specifies if online credit card payments are allowed for this invoice and corresponds to the Cards online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true. If set to true, allow invoice to be paid with online credit card payments. The Cards online payment check box is checked on the QuickBooks UI. If set to false, online credit card payments are not allowed. The Cards online payment check box is not checked on the QuickBooks UI.'
        # Dev-> Available for custom fields so configured for the company. Check Preferences.SalesFormsPrefs.CustomField and Preferences.VendorAndPurchasesPrefs.POCustomField for custom fields currenly configured.
        CustomField:
          type: object
          $ref: '#/components/schemas/CustomField'
       
        ApplyTaxAfterDiscount:
          x-display-name: 
          - Apply tax after discount
          x-attributes:
          - advanced
          type: boolean
          description: 'If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax.'
        #In use before AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags existed and provided to maintain backward compatibility. If set to true, this invoice was created before AllowOnlinePayment was deprecated and denotes both CC and ACH payments are allowed.
        # Dev ->  In addition, the AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags must be set to true. If set to false, this invoice was created after the AllowOnlinePayment flag was deprecated and is not used.  Do not modify.
        AllowOnlinePayment:
          x-attributes:
          - hide
          type: boolean
          description: 'Deprecated flag to allow online payments. '
        CurrencyRef:
          type: object
          $ref: '#/components/schemas/CurrencyRef'
        #
        # Dev-> DocNumber is required for France locale if Preferences:CustomTxnNumber is enabled and will not be be automatically generated.
        # Dev-> If not explicitly provided at create time, this field is populated based on the setting of Preferences:CustomTxnNumber as follows: 
        #      If Preferences:CustomTxnNumber is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null. 
        #      If Preferences:CustomTxnNumber is false, resulting DocNumber is system generated by incrementing the last number by 1.  
        #      If Preferences:CustomTxnNumber is false then do not send a value as it can lead to unwanted duplicates. 
        #      If a DocNumber value is sent for an Update operation, then it just updates that particular invoice and does not alter the internal system DocNumber.   
        # Dev-> Maximum of 21 chars
        DocNumber:
          x-attributes:
          - advanced 
          type: string
          description: 'Reference number for the transaction.'
        PrintStatus:
          type: string
          description: 'Printing status of the invoice.'
          enum : [NeedToPrint, PrintComplete, NotSet ]
        #This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI.
        PrivateNote:
          type: string
          description: 'User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer.'
        
        #read only field
        
        DeliveryInfo:
          x-attributes:
          - hide
          type: string
          description: 'Email delivery information. Returned when a request has been made to deliver email with the send operation. '
                
        #internal field
        
        TxnSource:
          x-attributes:
          - hide
          type: string
          description: 'Used internally to specify originating source of a credit card transaction.'

        #system defined
        FreeFormAddress:
          x-attributes:
          - hide
          type: boolean
          description: 'Denotes how ShipAddr is stored:&nbsp;formatted or unformatted. The value of this flag is system defined based on format of shipping address at object create time.If set to false, shipping address is returned in a formatted style using City, Country,&nbsp;CountrySubDivisionCode, Postal code.If set to true, shipping address is returned in an unformatted style using Line1 through Line5 attributes.'

# ----- Invoice responce

    InvoiceResponse:
      type: object
      properties:
        Invoice:
          $ref: '#/components/schemas/Invoice'
# ----- Invoice object

    Invoice:
      type: object
      required:
      - Line
      - CustomerRef
      - CurrencyRef
      x-base-schema:
        - true
      properties:
        Id:
          type: string
          description: 'Unique identifier for this object. Sort order is ASC by default.'
        Line:
          type: array
          description: 'Individual line items of a transaction. Valid Line types include Sales item line  Group item line  Description only (also used for inline Subtotal lines)  Discount line Subtotal Line (used for the overall transaction) '
          items:
            $ref: '#/components/schemas/SalesItemLine'
        CustomerRef:
          type: object
          $ref: '#/components/schemas/ReferenceType'
        SyncToken:
          type: string
          description: 'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.'
        CurrencyRef:
          type: object
          $ref: '#/components/schemas/CurrencyRef'
        DocNumber:
          type: string
          description: 'Reference number for the transaction. DocNumber is required for France locale if Preferences:CustomTxnNumber is enabled and will not be be automatically generated.  If not explicitly provided at create time, this field is populated based on the setting of Preferences:CustomTxnNumber as follows: If Preferences:CustomTxnNumber is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null. If Preferences:CustomTxnNumber is false, resulting DocNumber is system generated by incrementing the last number by 1.  If Preferences:CustomTxnNumber is false then do not send a value as it can lead to unwanted duplicates. If a DocNumber value is sent for an Update operation, then it just updates that particular invoice and does not alter the internal system DocNumber.'
        BillEmail:          
          type: object
          description: 'Identifies the e-mail address where the invoice is sent. If EmailStatus=NeedToSend, BillEmailis a required input. '
          properties:
            Address:
              type: string
        TxnDate:
          type: string
          description: 'The date entered by the user when this transaction occurred. yyyy/MM/dd is the valid date format.For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.Sort order is ASC by default.'
          format: date
        ShipFromAddr:
          type: string
          description: 'Identifies the address where the goods are shipped from. For transactions without shipping, it represents the address where the sale took place. For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.  If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
          $ref: '#/components/schemas/Address'
        ShipDate:
          type: string
          description: 'Date for delivery of goods or services. '
          format: date
        TrackingNum:
          type: string
          description: 'Shipping provider''s tracking number for the delivery of the goods associated with the transaction.'




        PrintStatus:
          type: string
          description: 'Printing status of the invoice. '
          enum: [NotSet, NeedToPrint, PrintComplete]
        TxnSource:
          type: string
          description: 'Used internally to specify originating source of a credit card transaction.'
        LinkedTxn:
          type: array
          description: 'Zero or more related transactions to this Invoice object. The following linked relationships are supported: Links to Estimate and TimeActivity objects can be established directly to this Invoice object with UI or with the API. Create, Read, Update, and Query operations are avaialble at the API level for these types of links.  Only one link can be made to an Estimate. Progress Invoicing is not supported via the API.  Links to expenses incurred on behalf of the customer are returned in the response with LinkedTxn.TxnType set to ReimburseCharge, ChargeCredit or StatementCharge corresponding to billable customer expenses of type Cash, Delayed Credit, and Delayed Charge, respectively. Links to these types of transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.   Links to payments applied to an Invoice object are returned in the response with LinkedTxn.TxnType set to Payment. Links to Payment transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.   Use LinkedTxn.TxnId as the ID in a separate read request for the specific resource to retrieve details of the linked object.'
          items:
            type: object
            required:
            - TxnId
            - TxnType
            properties:
              TxnId:
                type: string
                description: 'Transaction Id of the related transaction.'
              TxnType:
                type: string
                description: 'Transaction type of the linked object.'
              TxnLineId:
                type: string
                description: 'The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated.'
        GlobalTaxCalculation:
          type: string
          description: 'Method in which tax is applied. Allowed values are: TaxExcluded, TaxInclusive, and NotApplicable.'
          enum: [TaxExcluded, TaxInclusive,  NotApplicable]
        AllowOnlineACHPayment:
          type: boolean
          description: 'Specifies if this invoice can be paid with online bank transfers and corresponds to the Free bank transfer online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true. If set to true, allow invoice to be paid with online bank transfers. The Free bank transfer online payment check box is checked on the QuickBooks UI for this invoice. If set to false, online bank transfers are not allowed. The Free bank transfer online payment check box is not checked on the QuickBooks UI for this invoice.'
        TransactionLocationType:
          type: string
          description: 'The account location. For France locale valid values include: WithinFrance FranceOverseas OutsideFranceWithEU OutsideEU For India locale, use state code values from the list below:'
        DueDate:
          type: string
          description: 'Date when the payment of the transaction is due. If date is not provided, the number of days specified in SalesTermRef added the transaction date will be used.'
          format: date
        MetaData:
          type: object
          $ref: '#/components/schemas/MetaData'
        PrivateNote:
          type: string
          description: 'User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI.'
        BillEmailCc:
          type: object
          description: 'Identifies the carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailCc. If this email address is invalid, carbon copy email is not sent. '
          properties:
            Address:
              type: string
        EmailStatus:
          type: string
          description: 'Email status of the invoice. Valid values: NotSet, NeedToSend, EmailSent '
          enum: [NotSet, NeedToSend, EmailSent]
        ExchangeRate:
          type: number
          description: 'The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. Applicable if multicurrency is enabled for the company.'
        Deposit:
          type: number
          description: 'The deposit made towards this invoice.'
        TxnTaxDetail:
          type: object            
          description: 'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See Global tax model for more information about this element. If sales tax is disabled (Preferences.TaxPrefs.UsingSalesTax is set to false) then TxnTaxDetail is ignored and not stored. '
          $ref: '#/components/schemas/TxnTaxDetail'
        AllowOnlineCreditCardPayment:
          type: boolean
          description: 'Specifies if online credit card payments are allowed for this invoice and corresponds to the Cards online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true. If set to true, allow invoice to be paid with online credit card payments. The Cards online payment check box is checked on the QuickBooks UI. If set to false, online credit card payments are not allowed. The Cards online payment check box is not checked on the QuickBooks UI.'
        CustomField:
          type: string
          description: 'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check Preferences.SalesFormsPrefs.CustomField and Preferences.VendorAndPurchasesPrefs.POCustomField for custom fields currenly configured. Click here to learn about managing custom fields. '
          $ref: '#/components/schemas/CustomField'
        ShipAddr:
          type: string
          description: 'Identifies the address where the goods must be shipped. If ShipAddris not specified, and a default Customer:ShippingAddr is specified in QuickBooks for this customer, the default ship-to address will be used by QuickBooks.  For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.  If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
          $ref: '#/components/schemas/Address'
        BillEmailBcc:
          type: object
          description: 'Identifies the blind carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailBcc. If this email address is invalid, blind carbon copy email is not sent. '
          properties:
            Address:
              type: string
        BillAddr:
          type: string
          description: 'Bill-to address of the Invoice. If BillAddris not specified, and a default Customer:BillingAddr is specified in QuickBooks for this customer, the default bill-to address is used by QuickBooks.  For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.  If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
          $ref: '#/components/schemas/Address'
        ApplyTaxAfterDiscount:
          type: boolean
          description: 'If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax.'
        


        DeliveryInfo:
          type: object
          description: 'Email delivery information. Returned when a request has been made to deliver email with the send operation. '
        
        
        TotalAmt:
          type: number
          description: 'Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.'
        
        
        InvoiceLink:
          type: string
          description: 'Sharable link for the invoice sent to external customers. The link is generated only for invoices with online payment enabled and having a valid customer email address.'
        
        
        
        Balance:
          type: number
          description: 'The balance reflecting any payments made against the transaction. Initially set to the value of TotalAmt. A Balance of 0 indicates the invoice is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.'
        
        HomeTotalAmt:
          type: number
          description: 'Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified. Applicable if multicurrency is enabled for the company.'
        FreeFormAddress:
          type: boolean
          description: 'Denotes how ShipAddr is stored:&nbsp;formatted or unformatted. The value of this flag is system defined based on format of shipping address at object create time.If set to false, shipping address is returned in a formatted style using City, Country,&nbsp;CountrySubDivisionCode, Postal code.If set to true, shipping address is returned in an unformatted style using Line1 through Line5 attributes.'
        
        
        AllowOnlinePayment:
          type: boolean
          description: 'Deprecated flag to allow online payments. In use before AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags existed and provided to maintain backward compatibility. If set to true, this invoice was created before AllowOnlinePayment was deprecated and denotes both CC and ACH payments are allowed. In addition, the AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags must be set to true. If set to false, this invoice was created after the AllowOnlinePayment flag was deprecated and is not used.  Do not modify.'
        
    SubTotalLine:
      type: object
      required:
      - SubtotalLineDetail
      - DetailType
      - Amount
      properties:
        Id:
          type: string
          x-attributes:
          - hide
        SubtotalLineDetail:
          type: object
          description: 'Subtotal LineDetail'
          properties:
            ItemRef:
              type: object
              $ref: '#/components/schemas/ReferenceType'
        DetailType:
          type: string
          description: 'Set to SubtotalLineDetailfor this type of line.'
          default: SubtotalLineDetailfor
          enum: [SubtotalLineDetailfor]
        Amount:
          type: number
          description: 'The amount of the line item.'
        Description:
          type: string
          description: 'Free form text description of the line item that appears in the printed record.'
        LineNum:
          type: number
          description: 'Specifies the position of the line in the collection of transaction lines. Positive integer.'
    DiscountLine:
      type: object
      required:
      - DiscountLineDetail
      - DetailType
      - Amount
      properties:
        Id:
          type: string
          x-attributes: 
          - hide
        DiscountLineDetail:
          type: object
          description: 'Subtotal LineDetail'
          properties:
            ClassRef:
              type: object
              $ref: '#/components/schemas/ReferenceType'
            TaxCodeRef:
              type: object
              $ref: '#/components/schemas/ReferenceType'
            DiscountAccountRef:
              type: object
              $ref: '#/components/schemas/ReferenceType'
            PercentBased:
              type: boolean
            DiscountPercent:
              type: number
        DetailType:  
          type: string
          description: 'Set to DiscountLineDetail this type of line.'
          default: DiscountLineDetail
          enum: [DiscountLineDetail]
        Amount:
          type: number
          description: 'The amount of the line item.'
        Description:
          type: string
          description: 'Free form text description of the line item that appears in the printed record.'
          x-attributes: 
          - textarea
        LineNum:
          type: number
          description: 'Specifies the position of the line in the collection of transaction lines. Positive integer.'
    DescriptionOnlyLine:
      type: object
      required:
      - DescriptionLineDetail
      - DetailType
      properties:
        Id:
          type: string
          x-attributes: 
          - hide
        DescriptionLineDetail:
          type: object
          description: 'DescriptionLineDetail'
          properties:
            TaxCodeRef:
              type: object
              description: 'Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.'
              $ref: '#/components/schemas/ReferenceType'
            ServiceDate:
              type: object
              description: 'Date when the service is performed.'
              properties:
                date:
                  type: string
        DetailType:
          type: string
          description: 'Set to DescriptionOnly for this type of line.'
          default: DescriptionOnly
          enum: [DescriptionOnly]
        Description:
          type: string
          description: 'Free form text description of the line item that appears in the printed record.'
          x-attributes:
          - textarea
        LineNum:
          type: number
          description: 'Specifies the position of the line in the collection of transaction lines. Positive integer.'
    GroupLine:
      type: object
      required:
      - GroupLineDetail
      - DetailType
      properties:
        Id:
          type: string
          x-attributes: 
          - hide
        GroupLineDetail:
          type: object
          description: 'GroupLineDetail'
          properties:
            GroupItemRef:
              type: object
              $ref: '#/components/schemas/ReferenceType'

            Quantity:
              type: number
              description: 'Quantity of the group item.'
            Line:
              type: array
              description: 'Individual ItemLine elements that comprise a bundle. Returned in responses.'
              items:
                type: object
                required:
                - DetailType
                - SalesItemLineDetail
                - Amount
                properties:
                  Id:
                    type: string
                  DetailType:
                    type: string
                    description: 'Set to SalesItemLineDetailfor this type of line.'
                  Amount:
                    type: number
                    description: 'The amount of the line item.'
                  Description:
                    type: string
                    description: 'Free form text description of the line item that appears in the printed record.'
                  LineNum:
                    type: number
                    description: 'Specifies the position of the line in the collection of transaction lines. Positive integer.'
                  SalesItemLineDetail:
                    $ref: '#/components/schemas/SalesItemLineDetail'
        #no need to show on UI
        DetailType:
          type: string
          description: 'Set to DiscountLineDetail this type of line.'
          default: GroupLineDetail
          enum: [GroupLineDetail]
        Description:
          type: string
          description: 'Free form text description of the line item that appears in the printed record.'
        LineNum:
          type: number
          description: 'Specifies the position of the line in the collection of transaction lines. Positive integer.'
    SalesItemLine:
      type: object
      required:
      - SalesItemLineDetail
      - DetailType
      - Amount
      properties:
        Id:
          type: string
          x-attribute:
          - hide
        SalesItemLineDetail:
          $ref: '#/components/schemas/SalesItemLineDetail'
        DetailType:
          x-display-name: 
          - Detail Type          
          type: string
          description: 'Set to SalesItemLineDetail for type of line.'
          default: SalesItemLineDetail
          enum: [SalesItemLineDetail]
        # Dev-> Should be calculated automatically 
        Amount:
          type: number
          description: 'The amount of the line item. For Invoice objects in global locales: when updating Amount, remove the TxnTaxDetail element in the object before submitting it in the update request payload.'
        Description:
          type: string
          description: 'Free form text description of the line item that appears in the printed record.'
        LineNum:
          type: number
          description: 'Specifies the position of the line in the collection of transaction lines. Positive integer.'
    SalesItemLineDetail:
      type: object
      required:
      - ItemRef
      properties:
        UnitPrice:
          type: number
          description: 'Unit price of the subject item as referenced by ItemRef.'
        Qty:
          x-display-name: 
          - Quantity
          type: number
          description: 'Number of items for the line.'
        ServiceDate:
          type: string
          description: 'Date when the service is performed. '    
          format: date:YYYY-MM-DD
        #ItemAccountRef should be visible only  when there is a linkedtxn of type ReimburseCharge for this object.
        #When ItemRef.Id is set to 1, ItemAccountRef maps to the reimbursable charge account.
        ItemAccountRef:
          x-display-name: 
          - Item account
          type: object
          required:
          - value
          properties:
            value:
              x-display-name: 
              - Item account Id
              type: string
            name:
              x-display-name: 
              - Item account name
              x-attributes:
              - hide                 
              type: string
              
        #Reference to the Class for the line item. Available if Preferences.AccountingInfoPrefs.ClassTrackingPerLine is set to true
        ClassRef:
          x-attributes:
          - hide
          x-display-name: 
          - Class
          type: object          
          required:
          - value
          properties:
            value:
              x-display-name: 
              - Class ID
              type: string
            name:
              type: string
        TaxCodeRef:
          x-display-name: 
          - Tax code
          type: object
          required:
          - value
          properties:
            value:
              x-display-name: 
              - Tax code 
              type: string
              enum: [TAX, NON]
            name:
              x-attributes:
              - hide
              type: string
       # Dev ->select * from Item 
       # Dev -> need to show selet with list of available items
       # Query the Item name list resource to determine the appropriate Item object for this reference. Use Item.Id and Item.Name from that object for ItemRef.value and ItemRef.name, respectively.
       # Set ItemRef.value to SHIPPING_ITEM_ID when Line.amount represents transaction-wide shipping charges. Valid when Preferences.SalesFormsPrefs.AllowShipping is set to true.
       #Set ItemRef.value to GRATUITY_ITEM_ID when Line.amount represents transaction-wide gratuity amount. Valid when Preferences.OtherPrefs.Name.SalesFormsPrefs.AllowGratuity is set to true.
       # When a line lacks an ItemRef it is treated as documentation and the Line.Amountattribute is ignored.
       # Applicable to invoice objects, only, and when linktxn specifies a ReimburseCharge. When Item.Id is set to 1, ItemAccountRef refers to reimburse expense account Id.
        # For France locales: The account associated with the referenced Item object is looked up in the account category list.
        # If this account has same location as specified in the transaction by the TransactionLocationType attribute and the same
        # 1 VAT as in the line item TaxCodeRef attribute, then the item account is used.
        # If there is a mismatch, then the account from the account category list that matches the transaction location and VAT is used.
        # If this account is not present in the account category list, then a new account is created with the new location, new VAT code, and all other attributes as in the default account.
        ItemRef:
          x-display-name: 
          - Item 
          type: object
          required:
          - value
          properties:
            value:
              x-display-name: 
              - Item Id
              type: string
            name:
              x-attributes:
              - hide
              type: string

# ----- Payment Create request

    PaymentCreateRequest:
      type: object
      required:
      - TotalAmt
      - CustomerRef
      properties:
        TotalAmt:
          type: number
          description: 'Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes.'
        CustomerRef:
          type: object
          description: 'Reference to a customer or job'
          $ref: '#/components/schemas/ReferenceType'
        CurrencyRef:
          type: object
          description: 'Reference to the currency in which all amounts on the associated transaction are expressed'
          required:
          - value
          properties:
            value:
              type: string
              description: 'A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.'
            name:
              type: string
              description: 'The full name of the currency.'

# ----- Payment responce

    PaymentResponse:
      type: object
      properties:
        Payment:
          $ref: '#/components/schemas/Payment'

# ----- Payment object

    Payment:
      type: object
      required:
      - TotalAmt
      - CustomerRef
      x-base-schema:
        - true
      properties:
        Id:
          type: string
          description: 'Unique identifier for this object. Sort order is ASC by default.'
        TotalAmt:
          type: number
          description: 'Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.'
        CustomerRef:
          type: object
          $ref: '#/components/schemas/ReferenceType'
        SyncToken:
          type: string
          description: 'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.'
        
        CurrencyRef:
          type: object
          $ref: '#/components/schemas/CurrencyRef'
        PrivateNote:
          type: string
          description: 'User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI.'
        PaymentMethodRef:
          type: object
          $ref: '#/components/schemas/ReferenceType'

          
          
        UnappliedAmt:
          type: number
          description: 'Indicates the amount that has not been applied to pay amounts owed for sales transactions.'
        DepositToAccountRef:
          type: object
          $ref: '#/components/schemas/ReferenceType'


        ExchangeRate:
          type: number
          description: 'The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. Applicable if multicurrency is enabled for the company'
        
        Line:
          type: array
          description: 'Individual line items of a transaction. Valid Line types include Sales item line  Group item line  Description only (also used for inline Subtotal lines)  Discount line Subtotal Line (used for the overall transaction) '
          items:
            type: object
            description: 'Zero or more transactions accounting for this payment.'
            required:
            - Amount
            - LinkedTxn
            properties:
              Amount:
                type: number
                description: 'The amount of the line item.'
              LinkedTxn:
                type: array
                description: 'Transaction to which the current entity is related. For example, a billpayment line links to the originating bill object for which the billpayment is applied.'
                items:
                  type: object
                  required:
                  - TxnId
                  - TxnType
                  properties:
                    TxnId:
                      type: string
                      description: 'Transaction Id of the related transaction.'
                    TxnType:
                      type: string
                      description: 'Transaction type of the linked object.'
                    TxnLineId:
                      type: string
                      description: 'The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated.'
        
        TxnSource:
          type: string
          description: 'Used internally to specify originating source of a credit card transaction.'
        ARAccountRef:
          type: object
          $ref: '#/components/schemas/ReferenceType'    
        
        
        PaymentRefNum:
          type: string
          description: 'The reference number for the payment received. For example, A Check # for a check, envelope # for a cash donation.'
        TxnDate:
          type: string
          description: 'The date entered by the user when this transaction occurred. For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used. Sort order is ASC by default.'
        



        TransactionLocationType:
          type: string
          description: 'The account location. For France locale valid values include: WithinFrance FranceOverseas OutsideFranceWithEU OutsideEU For India locale, use state code values from the list below:'
        MetaData:
          type: object
          $ref: '#/components/schemas/MetaData'
        
        CreditCardPayment:
          type: object
          description: 'Information about a payment received by credit card. Inject with data only if the payment was transacted through Intuit Payments API.'
          properties:
            CreditChargeResponse:
              type: object
              description: 'Holds credit-card transaction response information from a merchant account service'
              properties:
                Status:
                  type: string
                  description: 'Indicates the status of the payment transaction. Possible values include Completed, Unknown.'
                AuthCode:
                  type: string
                  description: 'Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.'
                TxnAuthorizationTime:
                  type: object
                  properties:
                    dateTime:
                      type: string
                      description: 'Local time zone: YYYY-MM-DDTHH:MM:SS UTC: YYYY-MM-DDT HH :MM: SSZ Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM'
                CCTransId:
                  type: string
                  description: 'Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.'
            CreditChargeInfo:
              type: object
              description: 'Holds creditcard information to request a credit card payment from a merchant account service'
              properties:
                CcExpiryMonth:
                  type: number
                  description: 'Expiration Month on card, expressed as a number: 1=January, 2=February, etc'
                ProcessPayment:
                  type: boolean
                  description: 'false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse. -true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.'
                PostalCode:
                  type: string
                  description: 'Credit card holder billing postal code. Five digits in the USA'
                Amount:
                  type: number
                  description: 'The amount processed using the credit card.'
                NameOnAcct:
                  type: string
                  description: 'Account holder name, as printed on the card.'
                CcExpiryYear:
                  type: number
                  description: 'Expiration Year on card, expressed as a 4 digit number 1999, 2003, etc.'
                Type:
                  type: string
                  description: 'Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.'
                BillAddrStreet:
                  type: string
                  description: 'Credit card holder billing address of record: the street address to which credit card statements are sent.'
    #Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.
    Address:
      type: object
      properties:
        Line1:
            type: string
        Line2:
            type: string
        Line3:
            x-attributes:
            - hide
            type: string
        Line4:
            x-attributes:
            - hide
            type: string
        Line5:
            x-attributes:
            - hide
            type: string
        City: 
            type: string
       
        CountrySubDivisionCode:
            type: string
            description: 'Country SubDivision Code'    
            x-display-name: 
            - Country SubDivision Code
                   
        PostalCode:
            type: string
        Lat: 
            x-attributes:
            - hide
            type: string
            description: 'latitude'    
        Long:
            x-attributes:
            - hide
            type: string
            description: 'longitude'
    TxnTaxDetail:
      type: object
      properties:
        # Dev -> Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. 
        # Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively. If specified and sales tax is disabled (Preferences.TaxPrefs.UsingSalesTax is set to false), this element is ignored and not returned. 
        # For sales transactions, only: if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) the supplied transaction tax code is replaced by the automated sales tax engine recommendation.
        TxnTaxCodeRef: 
          type: object
          description: 'Transaction tax code'
          x-display-name: 
          - Transaction tax code
          required:
          - value
          properties: 
            value:
              type: string
            name:             
              x-attributes:
              - hide
              type: string
        TotalTax:
          type: number
          description: 'Total tax calculated for the transaction, excluding any tax lines manually inserted into the transaction line list.'
        TaxLine:
          type: array
          description: "Tax line"
          items:
              type: object                
              required:
              - DetailType
              - TaxLineDetail
              properties: 
                DetailType: 
                  type: string
                  enum: [TaxLineDetail]
                TaxLineDetail:
                  type: object
                  $ref: '#/components/schemas/TaxLineDetail'
                Amount:
                  type: number
                  description: 'The amount of tax for this tax line. '
    TaxLineDetail:
      type: object
      required: 
      - TaxRateRef
      properties: 
        # Reference to a TaxRate to apply to the entire transaction. 
        # Dev-> Query the TaxRate name list resource to determine the appropriate TaxRage object for this reference. 
        # Use TaxRate.Id and TaxRate.Name from that object for TaxRateRef.value and TaxRateRef.name, respectively.
        # For non-US versions of QuickBooks, the TaxRate referenced here must also be one of the rates in the referenced tax code's rate list—either the SalesTaxRateList or the PurchaseTaxRateList—as applies to the transaction type. Any given rate may only be listed once.
        TaxRateRef:
          x-display-name: 
          - Tax rate
          type: object
          required:
          - value
          properties: 
            value:
              type: string
              x-display-name: 
              - Tax rate Id
            name:               
              x-attributes:
              - hide
              type: string
        NetAmountTaxable:
          type: number
          description: 'Taxable amount on the total of the applicable tax rates. '
        PercentBased:
          type: string
          description: 'True — sales tax rate is expressed as a percentage. False — sales tax rate is expressed as a number amount.'
          enum: [true, false]
        TaxInclusiveAmount:
          type: number
          description: 'This is the total amount, including tax.'
        OverrideDeltaAmount: 
          type: number
          description: 'The difference between the actual tax and the overridden amount supplied by the user.'          
        TaxPercent: 
          type: number
          description: 'Numerical expression of the sales tax percent. For example, use "8.5" not "0.085".'

    CustomField:
      type: object
      description: 'One of, up to three custom fields for the transaction.  '
      properties: 
        #read only system defined
        DefinitionId: 
          type: string
          description: "read only system defined"
        StringValue:
          type: string
          description: "The value for the StringType custom field."
        #readonly field
        Name: 
          type: string

    ReferenceType:
      type: object
      required:
        - value
      properties:
         value:
           type: string
           x-display-name:
           - ID
         name:
           type: string
           x-attributes:
           - hide
    

    FreeFormNumber:
      type: object
      required:
      - FreeFormNumber
      properties: 
        FreeFormNumber:
          type: string
          description: 'The telephone number in free form'

    MetaData:
      type: object
      description: 'Descriptive information about the entity. '
      properties:
        CreateTime:
          type: string
          format: date
        LastUpdatedTime:
          type: string
          format: date
    CurrencyRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.'
            name:
              x-attributes:
              - hide
              type: string
              description: 'The full name of the currency.'