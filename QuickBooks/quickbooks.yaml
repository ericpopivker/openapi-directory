openapi: 3.0.1
info:
  version: '1.0'
  title: QuickBooks Online API
paths:
  /invoice:
    post:
      description: 'Create an Invoice'
      summary: Invoice-Create
      tags:
      - Invoice
      operationId: InvoicePost
      requestBody:
        description: ''
        content:
          application/json:
            schema:
             $ref: '#/components/schemas/InvoiceCreateRequest'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceResponse'
  /customer:
    post:
      description: Create a customer
      summary: Customer-Create
      tags:
      - Customer
      operationId: CustomerPost
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreateRequest'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
  '/customer/{id}':
    get:
      description: 'Retrieves the details of a Customer object that has been previously created.'
      tags:
        - Customer
      summary: Customer-Read
      operationId: CustomerGet
      parameters:
        - name: id
          in: path
          description: Customer Id
          required: true
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerResponse'
  /item:
    post:
      description: 'POST: Create an Item'
      summary: Item-Create
      tags:
      - Item
      operationId: ItemPost
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemCreateRequest'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemResponse'

  /item?minorversion=4:
    post:
      description: 'Create category.  Categories are only available companies that have enabled Categories.'
      tags: 
      - Category
      summary: Category-Create
      operationId: categoryPost
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreateRequest'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryCreateResponse'


  /payment:
    post:
      description: 'Create Payment'
      tags:
        - Payment
      summary: Payment-Create
      operationId: PaymentPost
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCreateRequest'
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponse'
  

components:
  schemas:
    CustomerCreateRequest:
      type: object
      required:
      - DisplayName
      properties:
        PrimaryEmailAddr:
          type: object
          description: 'Primary email address. '
          required:
            - Address
          properties:
            Address:
              type: string
        DisplayName:
          type: string
          description: 'The name of the person or organization as displayed. Must be unique across all Customer, Vendor, and Employee objects. Cannot be removed with sparse update. If not supplied, the system generates DisplayName by concatenating customer name components supplied in the request from the following list: Title, GivenName, MiddleName, FamilyName, and Suffix.'
        Title:
          type: string
          description: 'Title of the person. This tag supports i18n, all locales. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        ResaleNum:
          type: string
          description: Resale number or some additional info about the customer.
        PreferredDeliveryMethod:
          type: string
          description: 'Preferred delivery method. Values are Print, Email, or None.'
        GivenName:
          type: string
          description: 'Given name or first name of a person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        CustomerTypeRef:
          type: string
          description: Reference to the customer type assigned to a customer. This field is only returned if the customer is assigned a customer type.
        Fax:
          type: string
          description: 'Fax number. '
        BillWithParent:
          type: boolean
          description: 'If true, this Customer object is billed with its parent. If false, or null the customer is not to be billed with its parent. This attribute is valid only if this entity is a Job or sub Customer.'
        Mobile:
          type: string
          description: 'Mobile phone number. '
        Job:
          type: boolean
          description: 'If true, this is a Job or sub-customer. If false or null, this is a top level customer, not a Job or sub-customer.'
        BalanceWithJobs:
          type: number
          description: Cumulative open balance amount for the Customer (or Job) and all its sub-jobs. Cannot be written to QuickBooks.
        PrimaryPhone:
          type: string
          description: 'Primary phone number. '
        OpenBalanceDate:
          type: string
          description: Date of the Open Balance for the create operation. Write-on-create.
        Taxable:
          type: boolean
          description: 'If true, transactions for this customer are taxable. Default behavior with minor version 10 and above: true, if DefaultTaxCodeRef is defined or false if TaxExemptionReasonId is set.'
        AlternatePhone:
          type: string
          description: 'Alternate phone number. '
        MiddleName:
          type: string
          description: 'Middle name of the person. The person can have zero or more middle names. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        Notes:
          type: string
          description: Free form text describing the Customer.
        TaxExemptionReasonId:
          type: number
          description: 'The tax exemption reason associated with this customer object. Applicable if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) for the company.'
        WebAddr:
          type: string
          description: 'Website address. '
        Active:
          type: boolean
          description: 'If true, this entity is currently enabled for use by QuickBooks. If there is an amount in Customer.Balance when setting this Customer object to inactive through the QuickBooks UI, a CreditMemo balancing transaction is created for the amount.'
        Balance:
          type: number
          description: 'Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer. Write-on-create.'
        ShipAddr:
          type: string
          description: 'Default shipping address. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
        Suffix:
          type: string
          description: 'Suffix of the name. For example, Jr. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        IsProject:
          type: boolean
          description: 'If true, indicates this is a Project.'
        CompanyName:
          type: string
          description: The name of the company associated with the person or organization.
        FamilyName:
          type: string
          description: 'Family name or the last name of the person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        PrintOnCheckName:
          type: string
          description: 'Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Constraints: Cannot be removed with sparse update.'
        BillAddr:
          type: string
          description: 'Default billing address. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
    CustomerResponse:
      type: object
      properties:
        Customer:
          $ref: '#/components/schemas/Customer'
    Customer:
      type: object
      x-base-schema:
        - true
      properties:
        Id:
          type: string
          description: 'Unique identifier for this object. Sort order is ASC by default.'
        PrimaryEmailAddr:
          type: object
          description: 'Primary email address. '
          required:
            - Address
          properties:
            Address:
              type: string
        DisplayName:
          type: string
          description: 'The name of the person or organization as displayed. Must be unique across all Customer, Vendor, and Employee objects. Cannot be removed with sparse update. If not supplied, the system generates DisplayName by concatenating customer name components supplied in the request from the following list: Title, GivenName, MiddleName, FamilyName, and Suffix.'
        Title:
          type: string
          description: 'Title of the person. This tag supports i18n, all locales. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        ResaleNum:
          type: string
          description: Resale number or some additional info about the customer.
        PreferredDeliveryMethod:
          type: string
          description: 'Preferred delivery method. Values are Print, Email, or None.'
        GivenName:
          type: string
          description: 'Given name or first name of a person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        CustomerTypeRef:
          type: string
          description: Reference to the customer type assigned to a customer. This field is only returned if the customer is assigned a customer type.
        FullyQualifiedName:
          type: string
          description: 'Fully qualified name of the object. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of Customer:Job:Sub-job. System generated. Limited to 5 levels.'
        Fax:
          type: string
          description: 'Fax number. '
        BillWithParent:
          type: boolean
          description: 'If true, this Customer object is billed with its parent. If false, or null the customer is not to be billed with its parent. This attribute is valid only if this entity is a Job or sub Customer.'
        Mobile:
          type: string
          description: 'Mobile phone number. '
        Job:
          type: boolean
          description: 'If true, this is a Job or sub-customer. If false or null, this is a top level customer, not a Job or sub-customer.'
        BalanceWithJobs:
          type: number
          description: Cumulative open balance amount for the Customer (or Job) and all its sub-jobs. Cannot be written to QuickBooks.
        PrimaryPhone:
          type: string
          description: 'Primary phone number. '
        OpenBalanceDate:
          type: string
          description: Date of the Open Balance for the create operation. Write-on-create.
        Taxable:
          type: boolean
          description: 'If true, transactions for this customer are taxable. Default behavior with minor version 10 and above: true, if DefaultTaxCodeRef is defined or false if TaxExemptionReasonId is set.'
        AlternatePhone:
          type: string
          description: 'Alternate phone number. '
        MetaData:
          type: object
          description: 'Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications. '
        Level:
          type: string
          description: 'Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be level with respect to the parent. Constraints:up to 5 levels'
        MiddleName:
          type: string
          description: 'Middle name of the person. The person can have zero or more middle names. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        Notes:
          type: string
          description: Free form text describing the Customer.
        TaxExemptionReasonId:
          type: number
          description: 'The tax exemption reason associated with this customer object. Applicable if automated sales tax is enabled (Preferences.TaxPrefs.PartnerTaxEnabled is set to true) for the company.'
        WebAddr:
          type: string
          description: 'Website address. '
        Active:
          type: boolean
          description: 'If true, this entity is currently enabled for use by QuickBooks. If there is an amount in Customer.Balance when setting this Customer object to inactive through the QuickBooks UI, a CreditMemo balancing transaction is created for the amount.'
        Balance:
          type: number
          description: 'Specifies the open balance amount or the amount unpaid by the customer. For the create operation, this represents the opening balance for the customer. When returned in response to the query request it represents the current open balance (unpaid amount) for that customer. Write-on-create.'
        SyncToken:
          type: string
          description: 'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.'
        ShipAddr:
          type: string
          description: 'Default shipping address. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
        Suffix:
          type: string
          description: 'Suffix of the name. For example, Jr. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        IsProject:
          type: boolean
          description: 'If true, indicates this is a Project.'
        CompanyName:
          type: string
          description: The name of the company associated with the person or organization.
        FamilyName:
          type: string
          description: 'Family name or the last name of the person. The DisplayName attribute or at least one of Title, GivenName, MiddleName, FamilyName, or Suffix attributes is required.'
        PrintOnCheckName:
          type: string
          description: 'Name of the person or organization as printed on a check. If not provided, this is populated from DisplayName. Constraints: Cannot be removed with sparse update.'
        BillAddr:
          type: string
          description: 'Default billing address. If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
    

    ReferenceType:
      type: object
      required:
        - value
      properties:
         value:
           type: string
           description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
         name:
           type: string
           description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'

# ----- Category  

    CategoryCreateRequest:
      type: object
      properties:
        Type:
          type: string
          default: Category
          x-attributes:
            - hide

        Name:
          type: string
          description: 'Name of the category.'
        SubItem:
          type: boolean
          default: false
          x-attributes:
            - hide
                                
        # ParentRef:
        #   $ref:'#/components/schemas/ReferenceType'



    CategoryCreateResponse:
      type: object
      properties:
        item:
          type: object
          properties:
            Id: 
              type: string
              description: 'Unique identifier for this object. Sort order is ASC by default.'
            Name:
              type: string
              description: 'Name of the category.' 
          
# ----- Item


        
    
    ItemCreateRequest:
      type: object
      required:
      - ItemCategoryType
      - InvStartDate
      - Name
      properties:
        Sku:
          type: string
          description: 'The stock keeping unit (SKU) for this Item. This is a company-defined identifier for an item or product used in tracking inventory.'
        SalesTaxIncluded:
          type: boolean
          description: 'True if the sales tax is included in the item amount, and therefore is not calculated for the transaction.'
        TrackQtyOnHand:
          type: boolean
          description: 'True if there is quantity on hand to be tracked. Once this value is true, it cannot be updated to false. Applicable for items of type Inventory.  Not applicable for Service or NonInventory item types.'
        ItemCategoryType:
          type: string
          description: 'Classification that specifies the use of this item. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Read-only after object is created. Valid values include: Product and Service.'
        InvStartDate:
          type: string
          description: 'Date of opening balance for the inventory transaction. For read operations, the date returned in this field is always the originally provided inventory start date. For update operations, the date supplied is interpreted as the inventory adjust date, is stored as such in the underlying data model, and is reflected in the QuickBooks Online UI for the object. The inventory adjust date is not exposed for read operations through the API. Required for Inventory type items.'
        Type:
          type: string
          description: 'Classification that specifies the use of this item. See the description at the top of the Item entity page for details about supported item types. For requests with minor versions earlier than 4 specified, this field is read-only and system-defined as follows: Inventory--Default setting when TrackQtyOnHand, InvStartDate, and AssetAccountRef are specified. Used for goods the company sells and buys that are tracked as inventory.  Service--Default setting when TrackQtyOnHand, InvStartDate, and AssetAccountRef are not specified. Used for non-tangible goods the company sells and buys that are not tracked as inventory. For example, specialized labor, consulting hours, and professional fees.  For requests with minor version=4 query parameter, this field is required to be explicitly set with one of the following: Inventory--Used for goods the company sells and buys that are tracked as inventory.  Service--Used for non-tangible goods the company sells and buys that are not tracked as inventory. For example, specialized labor, consulting hours, and professional fees. NonInventory--Use for goods the company sells and buys that are not tracked as inventory. For example, office supplies or goods bought on behalf of the customer.  When querying Item objects with minor versions earlier than 4 specified, NonInventory types are returned as type Service. For French locales, Type is tied with ItemCategoryType: if ItemCategoryType is set to Service, then Type is set to Service, if ItemCategoryType is Product, then Type is set to NonInventory. >Required when minor version 4 is specified.'
        PurchaseTaxIncluded:
          type: boolean
          description: 'True if the purchase tax is included in the item amount, and therefore is not calculated for the transaction.'
        Description:
          type: string
          description: 'Description of the item.'
        AbatementRate:
          type: number
          description: 'Sales tax abatement rate for India locales.'
        ReverseChargeRate:
          type: number
          description: 'Sales tax reverse charge rate for India locales.'
        SubItem:
          type: boolean
          description: 'If true, this is a sub item. If false or null, this is a top-level item. Creating inventory hierarchies with traditional inventory items is being phased out in lieu of using categories and sub categories.'
        Taxable:
          type: boolean
          description: 'If true, transactions for this item are taxable. Applicable to US companies, only.'
        UQCDisplayText:
          type: string
          description: 'Text to be displayed on customer''s invoice to denote the Unit of Measure (instead of the standard code).'
        ReorderPoint:
          type: number
          description: 'The minimum quantity of a particular inventory item that you need to restock at any given time. The ReorderPoint value cannot be set to null for sparse updates(sparse=true). It can be set to null only for full updates.'
        PurchaseDesc:
          type: string
          description: 'Purchase description for the item.'
        Name:
          type: string
          description: 'Name of the item. This value is unique.'
        Active:
          type: boolean
          description: 'If true, the object is currently enabled for use by QuickBooks.'
        UQCId:
          type: string
          description: 'Id of Standard Unit of Measure (UQC:Unique Quantity Code) of the item according to GST rule. UQCId should be one of the following ids: '
        ServiceType:
          type: string
          description: 'Sales tax service type for India locales. '
        PurchaseCost:
          type: number
          description: 'Amount paid when buying or ordering the item, as expressed in the home currency.'
        QtyOnHand:
          type: number
          description: 'Current quantity of the Inventory items available for sale. Not used for Service or NonInventory type items.Required for Inventory type items.'
        UnitPrice:
          type: number
          description: 'Corresponds to the Price/Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.'
        AssetAccountRef:
          $ref: '#/components/schemas/ReferenceType'
        IncomeAccountRef:
          $ref: '#/components/schemas/ReferenceType'
        ExpenseAccountRef:
          $ref: '#/components/schemas/ReferenceType'
    ItemResponse:
      type: object
      properties:
        Item:
          $ref: '#/components/schemas/Item'
    Item:
      type: object
      required:
      - ItemCategoryType
      - InvStartDate
      - Name
      x-base-schema:
        - true
      properties:
        Sku:
          type: string
          description: 'The stock keeping unit (SKU) for this Item. This is a company-defined identifier for an item or product used in tracking inventory.'
        SalesTaxIncluded:
          type: boolean
          description: 'True if the sales tax is included in the item amount, and therefore is not calculated for the transaction.'
        TrackQtyOnHand:
          type: boolean
          description: 'True if there is quantity on hand to be tracked. Once this value is true, it cannot be updated to false. Applicable for items of type Inventory.  Not applicable for Service or NonInventory item types.'
        ItemCategoryType:
          type: string
          description: 'Classification that specifies the use of this item. Applicable for France companies, only. Available when endpoint is evoked with the minorversion=3 query parameter. Read-only after object is created. Valid values include: Product and Service.'
        InvStartDate:
          type: string
          description: 'Date of opening balance for the inventory transaction. For read operations, the date returned in this field is always the originally provided inventory start date. For update operations, the date supplied is interpreted as the inventory adjust date, is stored as such in the underlying data model, and is reflected in the QuickBooks Online UI for the object. The inventory adjust date is not exposed for read operations through the API. Required for Inventory type items.'
        Type:
          type: string
          description: 'Classification that specifies the use of this item. See the description at the top of the Item entity page for details about supported item types. For requests with minor versions earlier than 4 specified, this field is read-only and system-defined as follows: Inventory--Default setting when TrackQtyOnHand, InvStartDate, and AssetAccountRef are specified. Used for goods the company sells and buys that are tracked as inventory.  Service--Default setting when TrackQtyOnHand, InvStartDate, and AssetAccountRef are not specified. Used for non-tangible goods the company sells and buys that are not tracked as inventory. For example, specialized labor, consulting hours, and professional fees.  For requests with minor version=4 query parameter, this field is required to be explicitly set with one of the following: Inventory--Used for goods the company sells and buys that are tracked as inventory.  Service--Used for non-tangible goods the company sells and buys that are not tracked as inventory. For example, specialized labor, consulting hours, and professional fees. NonInventory--Use for goods the company sells and buys that are not tracked as inventory. For example, office supplies or goods bought on behalf of the customer.  When querying Item objects with minor versions earlier than 4 specified, NonInventory types are returned as type Service. For French locales, Type is tied with ItemCategoryType: if ItemCategoryType is set to Service, then Type is set to Service, if ItemCategoryType is Product, then Type is set to NonInventory. >Required when minor version 4 is specified.'
        PurchaseTaxIncluded:
          type: boolean
          description: 'True if the purchase tax is included in the item amount, and therefore is not calculated for the transaction.'
        FullyQualifiedName:
          type: string
          description: 'Fully qualified name of the entity. The fully qualified name prepends the topmost parent, followed by each sub element separated by colons. Takes the form of Item:SubItem. Returned from an existing object and not input on a new object.Limited to 5 levels.'
        Description:
          type: string
          description: 'Description of the item.'
        AbatementRate:
          type: number
          description: 'Sales tax abatement rate for India locales.'
        ReverseChargeRate:
          type: number
          description: 'Sales tax reverse charge rate for India locales.'
        SubItem:
          type: boolean
          description: 'If true, this is a sub item. If false or null, this is a top-level item. Creating inventory hierarchies with traditional inventory items is being phased out in lieu of using categories and sub categories.'
        Taxable:
          type: boolean
          description: 'If true, transactions for this item are taxable. Applicable to US companies, only.'
        UQCDisplayText:
          type: string
          description: 'Text to be displayed on customer''s invoice to denote the Unit of Measure (instead of the standard code).'
        ReorderPoint:
          type: number
          description: 'The minimum quantity of a particular inventory item that you need to restock at any given time. The ReorderPoint value cannot be set to null for sparse updates(sparse=true). It can be set to null only for full updates.'
        PurchaseDesc:
          type: string
          description: 'Purchase description for the item.'
        MetaData:
          type: object
          description: 'Descriptive information about the entity. The MetaData values are set by Data Services and are read only for all applications. '
        Name:
          type: string
          description: 'Name of the item. This value is unique.'
        Level:
          type: string
          description: 'Specifies the level of the hierarchy in which the entity is located. Zero specifies the top level of the hierarchy; anything above will be the next level with respect to the parent. Limited to 5 levels.'
        Active:
          type: boolean
          description: 'If true, the object is currently enabled for use by QuickBooks.'
        UQCId:
          type: string
          description: 'Id of Standard Unit of Measure (UQC:Unique Quantity Code) of the item according to GST rule. UQCId should be one of the following ids: '
        SyncToken:
          type: string
          description: 'Version number of the entity. Required for the update operation.'
        ServiceType:
          type: string
          description: 'Sales tax service type for India locales. '
        PurchaseCost:
          type: number
          description: 'Amount paid when buying or ordering the item, as expressed in the home currency.'
        QtyOnHand:
          type: number
          description: 'Current quantity of the Inventory items available for sale. Not used for Service or NonInventory type items.Required for Inventory type items.'
        UnitPrice:
          type: number
          description: 'Corresponds to the Price/Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.'
        Id:
          type: string
          description: 'Unique Identifier for an Intuit entity (object). Required for the update operation.'
        AssetAccountRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
            name:
              type: string
              description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
    InvoiceCreateRequest:
      type: object
      required:
      - Line
      - CustomerRef
      properties:
        TxnDate:
          type: string
          format: date
          pattern: "yyyy/MM/dd"
          description: 'The date entered by the user when this transaction occurred. yyyy/MM/dd is the valid date format.For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.Sort order is ASC by default.'
        ShipFromAddr:
          type: object
            required:
            - Line1
            properties:
              Line1:
                type: string
                description: 'address 1'
              Line2:
                type: string
                description: 'address 2'         
              City: 
                type: string
                description: 'City'    
              CountrySubDivisionCode:
                type: string
                description: 'CountrySubDivisionCode'                
              PostalCode:
                type: string
                description: 'PostalCode'         
              Lat: 
                type: string
                description: 'latitude'    
              Long:
                type: string
                description: 'longitude'
          description: 'Identifies the address where the goods are shipped from. For transactions without shipping, it represents the address where the sale took place. For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.  If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
        ShipDate:
          type: string
          description: 'Date for delivery of goods or services. '
        TrackingNum:
          type: string
          description: 'Shipping provider''s tracking number for the delivery of the goods associated with the transaction.'
        PrintStatus:
          type: select
          description: 'Printing status of the invoice. Valid values: NotSet, NeedToPrint, PrintComplete .'
          options:
            - NeedToPrint
            - PrintComplete
            - NotSet
        DeliveryInfo:
          type: string
          description: 'Email delivery information. Returned when a request has been made to deliver email with the send operation. '
        TxnSource:
          type: string
          description: 'Used internally to specify originating source of a credit card transaction.'
        LinkedTxn:
          type: array
          description: 'Zero or more related transactions to this Invoice object. The following linked relationships are supported: Links to Estimate and TimeActivity objects can be established directly to this Invoice object with UI or with the API. Create, Read, Update, and Query operations are avaialble at the API level for these types of links.  Only one link can be made to an Estimate. Progress Invoicing is not supported via the API.  Links to expenses incurred on behalf of the customer are returned in the response with LinkedTxn.TxnType set to ReimburseCharge, ChargeCredit or StatementCharge corresponding to billable customer expenses of type Cash, Delayed Credit, and Delayed Charge, respectively. Links to these types of transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.   Links to payments applied to an Invoice object are returned in the response with LinkedTxn.TxnType set to Payment. Links to Payment transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.   Use LinkedTxn.TxnId as the ID in a separate read request for the specific resource to retrieve details of the linked object.'
          items:
            type: object
            required:
            - TxnId
            - TxnType
            properties:
              TxnId:
                type: string
                description: 'Transaction Id of the related transaction.'
              TxnType:
                type: select
                options:
                    - ReimburseCharge
                    - ChargeCredit
                    - StatementCharge
                    - Payment
                    - Estimate
                    - TimeActivity
                description: 'Transaction type of the linked object.'
              TxnLineId:
                type: string
                description: 'The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated.'
        GlobalTaxCalculation:
          type: string
          description: 'Method in which tax is applied. Allowed values are: TaxExcluded, TaxInclusive, and NotApplicable.'
        TotalAmt:
          type: string
          description: 'Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.'
        AllowOnlineACHPayment:
          type: boolean
          description: 'Specifies if this invoice can be paid with online bank transfers and corresponds to the Free bank transfer online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true. If set to true, allow invoice to be paid with online bank transfers. The Free bank transfer online payment check box is checked on the QuickBooks UI for this invoice. If set to false, online bank transfers are not allowed. The Free bank transfer online payment check box is not checked on the QuickBooks UI for this invoice.'
        TransactionLocationType:
          type: string
          description: 'The account location. For France locale valid values include: WithinFrance FranceOverseas OutsideFranceWithEU OutsideEU For India locale, use state code values from the list below:'
        DueDate:
          type: object
          description: 'Date when the payment of the transaction is due. If date is not provided, the number of days specified in SalesTermRef added the transaction date will be used.'
          properties:
            date:
              type: string
              description: 'Local timezone: YYYY-MM-DD UTC: YYYY-MM-DDZ Specific time zone: YYYY-MM-DD+/-HH:MM'
        DocNumber:
          type: string
          description: 'Reference number for the transaction. DocNumber is required for France locale if Preferences:CustomTxnNumber is enabled and will not be be automatically generated.  If not explicitly provided at create time, this field is populated based on the setting of Preferences:CustomTxnNumber as follows: If Preferences:CustomTxnNumber is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null. If Preferences:CustomTxnNumber is false, resulting DocNumber is system generated by incrementing the last number by 1.  If Preferences:CustomTxnNumber is false then do not send a value as it can lead to unwanted duplicates. If a DocNumber value is sent for an Update operation, then it just updates that particular invoice and does not alter the internal system DocNumber.'
        PrivateNote:
          type: string
          description: 'User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI.'
        Line:
          type: array
          description: 'Individual line items of a transaction. Valid Line types include Sales item line  Group item line  Description only (also used for inline Subtotal lines)  Discount line Subtotal Line (used for the overall transaction) '
          items:
            $ref: '#/components/schemas/SalesItemLine'
        BillEmailCc:
          type: string
          description: 'Identifies the carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailCc. If this email address is invalid, carbon copy email is not sent. '
        EmailStatus:
          type: string
          description: 'Email status of the invoice. Valid values: NotSet, NeedToSend, EmailSent '
        ExchangeRate:
          type: number
          description: 'The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. Applicable if multicurrency is enabled for the company.'
        Deposit:
          type: number
          description: 'The deposit made towards this invoice.'
        TxnTaxDetail:
          type: string
          description: 'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See Global tax model for more information about this element. If sales tax is disabled (Preferences.TaxPrefs.UsingSalesTax is set to false) then TxnTaxDetail is ignored and not stored. '
        AllowOnlineCreditCardPayment:
          type: boolean
          description: 'Specifies if online credit card payments are allowed for this invoice and corresponds to the Cards online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true. If set to true, allow invoice to be paid with online credit card payments. The Cards online payment check box is checked on the QuickBooks UI. If set to false, online credit card payments are not allowed. The Cards online payment check box is not checked on the QuickBooks UI.'
        CustomField:
          type: string
          description: 'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check Preferences.SalesFormsPrefs.CustomField and Preferences.VendorAndPurchasesPrefs.POCustomField for custom fields currenly configured. Click here to learn about managing custom fields. '
        ShipAddr:
          type: string
          description: 'Identifies the address where the goods must be shipped. If ShipAddris not specified, and a default Customer:ShippingAddr is specified in QuickBooks for this customer, the default ship-to address will be used by QuickBooks.  For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.  If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
        BillEmailBcc:
          type: string
          description: 'Identifies the blind carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailBcc. If this email address is invalid, blind carbon copy email is not sent. '
        BillAddr:
          type: string
          description: 'Bill-to address of the Invoice. If BillAddris not specified, and a default Customer:BillingAddr is specified in QuickBooks for this customer, the default bill-to address is used by QuickBooks.  For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.  If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
        FreeFormAddress:
          type: boolean
          description: 'Denotes how ShipAddr is stored:&nbsp;formatted or unformatted. The value of this flag is system defined based on format of shipping address at object create time.If set to false, shipping address is returned in a formatted style using City, Country,&nbsp;CountrySubDivisionCode, Postal code.If set to true, shipping address is returned in an unformatted style using Line1 through Line5 attributes.'
        ApplyTaxAfterDiscount:
          type: boolean
          description: 'If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax.'
        BillEmail:
          type: string
          description: 'Identifies the e-mail address where the invoice is sent. If EmailStatus=NeedToSend, BillEmailis a required input. '
        AllowOnlinePayment:
          type: boolean
          description: 'Deprecated flag to allow online payments. In use before AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags existed and provided to maintain backward compatibility. If set to true, this invoice was created before AllowOnlinePayment was deprecated and denotes both CC and ACH payments are allowed. In addition, the AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags must be set to true. If set to false, this invoice was created after the AllowOnlinePayment flag was deprecated and is not used.  Do not modify.'
        CustomerRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
            name:
              type: string
              description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
        CurrencyRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.'
            name:
              type: string
              description: 'The full name of the currency.'
    InvoiceResponse:
      type: object
      properties:
        Invoice:
          $ref: '#/components/schemas/Invoice'
    Invoice:
      type: object
      required:
      - Line
      - CustomerRef
      - CurrencyRef
      x-base-schema:
        - true
      properties:
        TxnDate:
          type: string
          description: 'The date entered by the user when this transaction occurred. yyyy/MM/dd is the valid date format.For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used.Sort order is ASC by default.'
        ShipFromAddr:
          type: string
          description: 'Identifies the address where the goods are shipped from. For transactions without shipping, it represents the address where the sale took place. For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.  If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
        ShipDate:
          type: string
          description: 'Date for delivery of goods or services. '
        TrackingNum:
          type: string
          description: 'Shipping provider''s tracking number for the delivery of the goods associated with the transaction.'
        PrintStatus:
          type: string
          description: 'Printing status of the invoice. Valid values: NotSet, NeedToPrint, PrintComplete .'
        DeliveryInfo:
          type: object
          description: 'Email delivery information. Returned when a request has been made to deliver email with the send operation. '
        TxnSource:
          type: string
          description: 'Used internally to specify originating source of a credit card transaction.'
        LinkedTxn:
          type: array
          description: 'Zero or more related transactions to this Invoice object. The following linked relationships are supported: Links to Estimate and TimeActivity objects can be established directly to this Invoice object with UI or with the API. Create, Read, Update, and Query operations are avaialble at the API level for these types of links.  Only one link can be made to an Estimate. Progress Invoicing is not supported via the API.  Links to expenses incurred on behalf of the customer are returned in the response with LinkedTxn.TxnType set to ReimburseCharge, ChargeCredit or StatementCharge corresponding to billable customer expenses of type Cash, Delayed Credit, and Delayed Charge, respectively. Links to these types of transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.   Links to payments applied to an Invoice object are returned in the response with LinkedTxn.TxnType set to Payment. Links to Payment transactions are established within the QuickBooks UI, only, and are available as read-only at the API level.   Use LinkedTxn.TxnId as the ID in a separate read request for the specific resource to retrieve details of the linked object.'
          items:
            type: object
            required:
            - TxnId
            - TxnType
            properties:
              TxnId:
                type: string
                description: 'Transaction Id of the related transaction.'
              TxnType:
                type: string
                description: 'Transaction type of the linked object.'
              TxnLineId:
                type: string
                description: 'The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated.'
        GlobalTaxCalculation:
          type: string
          description: 'Method in which tax is applied. Allowed values are: TaxExcluded, TaxInclusive, and NotApplicable.'
        TotalAmt:
          type: number
          description: 'Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.'
        InvoiceLink:
          type: string
          description: 'Sharable link for the invoice sent to external customers. The link is generated only for invoices with online payment enabled and having a valid customer email address.'
        AllowOnlineACHPayment:
          type: boolean
          description: 'Specifies if this invoice can be paid with online bank transfers and corresponds to the Free bank transfer online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true. If set to true, allow invoice to be paid with online bank transfers. The Free bank transfer online payment check box is checked on the QuickBooks UI for this invoice. If set to false, online bank transfers are not allowed. The Free bank transfer online payment check box is not checked on the QuickBooks UI for this invoice.'
        TransactionLocationType:
          type: string
          description: 'The account location. For France locale valid values include: WithinFrance FranceOverseas OutsideFranceWithEU OutsideEU For India locale, use state code values from the list below:'
        DueDate:
          type: object
          description: 'Date when the payment of the transaction is due. If date is not provided, the number of days specified in SalesTermRef added the transaction date will be used.'
          properties:
            date:
              type: string
              description: 'Local timezone: YYYY-MM-DD UTC: YYYY-MM-DDZ Specific time zone: YYYY-MM-DD+/-HH:MM'
        MetaData:
          type: string
          description: 'Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. '
        DocNumber:
          type: string
          description: 'Reference number for the transaction. DocNumber is required for France locale if Preferences:CustomTxnNumber is enabled and will not be be automatically generated.  If not explicitly provided at create time, this field is populated based on the setting of Preferences:CustomTxnNumber as follows: If Preferences:CustomTxnNumber is true a custom value can be provided. If no value is supplied, the resulting DocNumber is null. If Preferences:CustomTxnNumber is false, resulting DocNumber is system generated by incrementing the last number by 1.  If Preferences:CustomTxnNumber is false then do not send a value as it can lead to unwanted duplicates. If a DocNumber value is sent for an Update operation, then it just updates that particular invoice and does not alter the internal system DocNumber.'
        PrivateNote:
          type: string
          description: 'User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI.'
        Line:
          type: array
          description: 'Individual line items of a transaction. Valid Line types include Sales item line  Group item line  Description only (also used for inline Subtotal lines)  Discount line Subtotal Line (used for the overall transaction) '
          items:
            $ref: '#/components/schemas/SalesItemLine'
        BillEmailCc:
          type: string
          description: 'Identifies the carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailCc. If this email address is invalid, carbon copy email is not sent. '
        EmailStatus:
          type: string
          description: 'Email status of the invoice. Valid values: NotSet, NeedToSend, EmailSent '
        ExchangeRate:
          type: number
          description: 'The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. Applicable if multicurrency is enabled for the company.'
        Deposit:
          type: number
          description: 'The deposit made towards this invoice.'
        Balance:
          type: number
          description: 'The balance reflecting any payments made against the transaction. Initially set to the value of TotalAmt. A Balance of 0 indicates the invoice is fully paid. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.'
        TxnTaxDetail:
          type: string
          description: 'This data type provides information for taxes charged on the transaction as a whole. It captures the details sales taxes calculated for the transaction based on the tax codes referenced by the transaction. This can be calculated by QuickBooks business logic or you may supply it when adding a transaction. See Global tax model for more information about this element. If sales tax is disabled (Preferences.TaxPrefs.UsingSalesTax is set to false) then TxnTaxDetail is ignored and not stored. '
        AllowOnlineCreditCardPayment:
          type: boolean
          description: 'Specifies if online credit card payments are allowed for this invoice and corresponds to the Cards online payment check box on the QuickBooks UI. Active when Preferences.SalesFormsPrefs.ETransactionPaymentEnabled is set to true. If set to true, allow invoice to be paid with online credit card payments. The Cards online payment check box is checked on the QuickBooks UI. If set to false, online credit card payments are not allowed. The Cards online payment check box is not checked on the QuickBooks UI.'
        SyncToken:
          type: string
          description: 'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.'
        CustomField:
          type: string
          description: 'One of, up to three custom fields for the transaction. Available for custom fields so configured for the company. Check Preferences.SalesFormsPrefs.CustomField and Preferences.VendorAndPurchasesPrefs.POCustomField for custom fields currenly configured. Click here to learn about managing custom fields. '
        ShipAddr:
          type: string
          description: 'Identifies the address where the goods must be shipped. If ShipAddris not specified, and a default Customer:ShippingAddr is specified in QuickBooks for this customer, the default ship-to address will be used by QuickBooks.  For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.  If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
        HomeTotalAmt:
          type: number
          description: 'Total amount of the transaction in the home currency. Includes the total of all the charges, allowances and taxes. Calculated by QuickBooks business logic. Value is valid only when CurrencyRef is specified. Applicable if multicurrency is enabled for the company.'
        BillEmailBcc:
          type: string
          description: 'Identifies the blind carbon copy e-mail address where the invoice is sent. If not specified, this field is populated from that defined in Preferences.SalesFormsPrefs.SalesEmailBcc. If this email address is invalid, blind carbon copy email is not sent. '
        BillAddr:
          type: string
          description: 'Bill-to address of the Invoice. If BillAddris not specified, and a default Customer:BillingAddr is specified in QuickBooks for this customer, the default bill-to address is used by QuickBooks.  For international addresses - countries should be passed as 3 ISO alpha-3 characters or the full name of the country.  If a physical address is updated from within the transaction object, the QuickBooks Online API flows individual address components differently into the Line elements of the transaction response then when the transaction was first created:Line1 and Line2 elements are populated with the customer name and company name.Original Line1 through Line 5 contents, City, SubDivisionCode, and PostalCode flow into Line3 through Line5as a free format strings.'
        FreeFormAddress:
          type: boolean
          description: 'Denotes how ShipAddr is stored:&nbsp;formatted or unformatted. The value of this flag is system defined based on format of shipping address at object create time.If set to false, shipping address is returned in a formatted style using City, Country,&nbsp;CountrySubDivisionCode, Postal code.If set to true, shipping address is returned in an unformatted style using Line1 through Line5 attributes.'
        ApplyTaxAfterDiscount:
          type: boolean
          description: 'If false or null, calculate the sales tax first, and then apply the discount. If true, subtract the discount first and then calculate the sales tax.'
        BillEmail:
          type: string
          description: 'Identifies the e-mail address where the invoice is sent. If EmailStatus=NeedToSend, BillEmailis a required input. '
        Id:
          type: string
          description: 'Unique identifier for this object. Sort order is ASC by default.'
        AllowOnlinePayment:
          type: boolean
          description: 'Deprecated flag to allow online payments. In use before AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags existed and provided to maintain backward compatibility. If set to true, this invoice was created before AllowOnlinePayment was deprecated and denotes both CC and ACH payments are allowed. In addition, the AllowOnlineCreditCardPayment and AllowOnlineACHPayment flags must be set to true. If set to false, this invoice was created after the AllowOnlinePayment flag was deprecated and is not used.  Do not modify.'
        CustomerRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
            name:
              type: string
              description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
        CurrencyRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.'
            name:
              type: string
              description: 'The full name of the currency.'
    SubTotalLine:
      type: object
      required:
      - SubtotalLineDetail
      - DetailType
      - Amount
      properties:
        SubtotalLineDetail:
          type: object
          description: 'Subtotal LineDetail'
          properties:
            ItemRef:
              type: object
              required:
              - value
              properties:
                value:
                  type: string
                  description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
                name:
                  type: string
                  description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
        DetailType:
          type: string
          description: 'Set to SubtotalLineDetailfor this type of line.'
        Amount:
          type: number
          description: 'The amount of the line item.'
        Description:
          type: string
          description: 'Free form text description of the line item that appears in the printed record.'
        LineNum:
          type: number
          description: 'Specifies the position of the line in the collection of transaction lines. Positive integer.'
    DiscountLine:
      type: object
      required:
      - DiscountLineDetail
      - DetailType
      - Amount
      properties:
        SubtotalLineDetail:
          type: object
          description: 'Subtotal LineDetail'
          properties:
            ClassRef:
              type: object
              required:
              - value
              properties:
                value:
                  type: string
                  description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
                name:
                  type: string
                  description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
        DetailType:
          type: string
          description: 'Set to DiscountLineDetail this type of line.'
        Amount:
          type: number
          description: 'The amount of the line item.'
        Description:
          type: string
          description: 'Free form text description of the line item that appears in the printed record.'
        LineNum:
          type: number
          description: 'Specifies the position of the line in the collection of transaction lines. Positive integer.'
    DescriptionOnlyLine:
      type: object
      required:
      - DescriptionLineDetail
      - DetailType
      properties:
        DescriptionLineDetail:
          type: object
          description: 'DescriptionLineDetail'
          properties:
            TaxCodeRef:
              type: object
              description: 'Reference to the TaxCodefor this item. Query the TaxCode name list resource to determine the appropriate TaxCode object for this reference. Use TaxCode.Id and TaxCode.Name from that object for TaxCodeRef.value and TaxCodeRef.name, respectively.'
              required:
              - value
              properties:
                value:
                  type: string
                  description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
                name:
                  type: string
                  description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
            ServiceDate:
              type: object
              description: 'Date when the service is performed.'
              properties:
                date:
                  type: string
                  description: 'Local timezone: YYYY-MM-DD UTC: YYYY-MM-DDZ Specific time zone: YYYY-MM-DD+/-HH:MM'
        DetailType:
          type: string
          description: 'Set to DiscountLineDetail for this type of line.'
        Description:
          type: string
          description: 'Free form text description of the line item that appears in the printed record.'
        LineNum:
          type: number
          description: 'Specifies the position of the line in the collection of transaction lines. Positive integer.'
    GroupLine:
      type: object
      required:
      - GroupLineDetail
      - DetailType
      properties:
        GroupLineDetail:
          type: object
          description: 'GroupLineDetail'
          properties:
            GroupItemRef:
              type: object
              description: 'Reference to a group item for all the lines that belong to the bundle. Query the Item name list resource to determine the appropriate Item group object (Item.Type=Group) for this reference. Use Item.Id and Item.Name from that object for GroupItemRef.value and GroupItemRef.name, respectively.'
              required:
              - value
              properties:
                value:
                  type: string
                  description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
                name:
                  type: string
                  description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
            Quantity:
              type: number
              description: 'Quantity of the group item.'
            Line:
              type: array
              description: 'Individual ItemLine elements that comprise a bundle. Returned in responses.'
              items:
                type: object
                required:
                - DetailType
                - SalesItemLineDetail
                - Amount
                properties:
                  DetailType:
                    type: string
                    description: 'Set to SalesItemLineDetailfor this type of line.'
                  Amount:
                    type: number
                    description: 'The amount of the line item.'
                  Description:
                    type: string
                    description: 'Free form text description of the line item that appears in the printed record.'
                  LineNum:
                    type: number
                    description: 'Specifies the position of the line in the collection of transaction lines. Positive integer.'
                  SalesItemLineDetail:
                    $ref: '#/components/schemas/SalesItemLineDetail'
        DetailType:
          type: string
          description: 'Set to DiscountLineDetail this type of line.'
        Description:
          type: string
          description: 'Free form text description of the line item that appears in the printed record.'
        LineNum:
          type: number
          description: 'Specifies the position of the line in the collection of transaction lines. Positive integer.'
    SalesItemLine:
      type: object
      required:
      - SalesItemLineDetail
      - DetailType
      - Amount
      properties:
        SalesItemLineDetail:
          $ref: '#/components/schemas/SalesItemLineDetail'
        DetailType:
          type: select
          description: 'Set to SalesItemLineDetail for type of line.'
          options:
            - JournalEntryLineDetail
            - DepositLineDetail
            - SalesItemLineDetail
            - PurchaseOrderItemLineDetail
            - DiscountLineDetail
            - TDSLineDetail
            - SubTotalLineDetail
            - ItemReceiptLineDetail
            - PaymentLineDetail
            - TaxLineDetail
            - AccountBasedExpenseLineDetail
            - SalesOrderItemLineDetail
            - ItemBasedExpenseLineDetail
            - GroupLineDetail
            - DescriptionOnly
        Amount:
          type: number
          description: 'The amount of the line item. For Invoice objects in global locales: when updating Amount, remove the TxnTaxDetail element in the object before submitting it in the update request payload.'
        Description:
          type: string
          description: 'Free form text description of the line item that appears in the printed record.'
        LineNum:
          type: number
          description: 'Specifies the position of the line in the collection of transaction lines. Positive integer.'
    SalesItemLineDetail:
      type: object
      description: 'SalesItemLineDetail'
      required:
      - ItemRef
      properties:
        UnitPrice:
          type: number
          description: 'Unit price of the subject item as referenced by ItemRef. Corresponds to the Rate column on the QuickBooks Online UI to specify either unit price, a discount, or a tax rate for item. If used for unit price, the monetary value of the service or product, as expressed in the home currency. You can override the unit price of the subject item by supplying a new value with create or update operations. If used for a discount or tax rate, express the percentage as a fraction. For example, specify 0.4 for 40% tax.'
        Qty:
          type: number
          description: 'Number of items for the line.'
        ServiceDate:
          type: object
          description: 'Date when the service is performed.'
          properties:
            date:
              type: string
              description: 'Local timezone: YYYY-MM-DD UTC: YYYY-MM-DDZ Specific time zone: YYYY-MM-DD+/-HH:MM'
        ItemAccountRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
            name:
              type: string
              description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
        ClassRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
            name:
              type: string
              description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
        TaxCodeRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
            name:
              type: string
              description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
        ItemRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
            name:
              type: string
              description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
    PaymentCreateRequest:
      type: object
      required:
      - TotalAmt
      - CustomerRef
      properties:
        TotalAmt:
          type: number
          description: 'Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes.'
        CustomerRef:
          type: object
          description: 'Reference to a customer or job'
          required:
          - value
          properties:
            value:
              type: string
              description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
            name:
              type: string
              description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
        CurrencyRef:
          type: object
          description: 'Reference to the currency in which all amounts on the associated transaction are expressed'
          required:
          - value
          properties:
            value:
              type: string
              description: 'A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.'
            name:
              type: string
              description: 'The full name of the currency.'
    PaymentResponse:
      type: object
      properties:
        Payment:
          $ref: '#/components/schemas/Payment'
    Payment:
      type: object
      required:
      - TotalAmt
      - CustomerRef
      x-base-schema:
        - true
      properties:
        PaymentMethodRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
            name:
              type: string
              description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
        UnappliedAmt:
          type: number
          description: 'Indicates the amount that has not been applied to pay amounts owed for sales transactions.'
        DepositToAccountRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
            name:
              type: string
              description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
        ExchangeRate:
          type: number
          description: 'The number of home currency units it takes to equal one unit of currency specified by CurrencyRef. Applicable if multicurrency is enabled for the company'
        PaymentRefNum:
          type: string
          description: 'The reference number for the payment received. For example, A Check # for a check, envelope # for a cash donation.'
        ARAccountRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
            name:
              type: string
              description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
        TxnDate:
          type: string
          description: 'The date entered by the user when this transaction occurred. For posting transactions, this is the posting date that affects the financial statements. If the date is not supplied, the current date on the server is used. Sort order is ASC by default.'
        TxnSource:
          type: string
          description: 'Used internally to specify originating source of a credit card transaction.'
        TotalAmt:
          type: number
          description: 'Indicates the total amount of the transaction. This includes the total of all the charges, allowances, and taxes. Calculated by QuickBooks business logic; any value you supply is over-written by QuickBooks.'
        TransactionLocationType:
          type: string
          description: 'The account location. For France locale valid values include: WithinFrance FranceOverseas OutsideFranceWithEU OutsideEU For India locale, use state code values from the list below:'
        MetaData:
          type: string
          description: 'Descriptive information about the object. The MetaData values are set by Data Services and are read only for all applications. '
        PrivateNote:
          type: string
          description: 'User entered, organization-private note about the transaction. This note does not appear on the invoice to the customer. This field maps to the Statement Memo field on the Invoice form in the QuickBooks Online UI.'
        Line:
          type: array
          description: 'Individual line items of a transaction. Valid Line types include Sales item line  Group item line  Description only (also used for inline Subtotal lines)  Discount line Subtotal Line (used for the overall transaction) '
          items:
            type: object
            description: 'Zero or more transactions accounting for this payment.'
            required:
            - Amount
            - LinkedTxn
            properties:
              Amount:
                type: number
                description: 'The amount of the line item.'
              LinkedTxn:
                type: array
                description: 'Transaction to which the current entity is related. For example, a billpayment line links to the originating bill object for which the billpayment is applied.'
                items:
                  type: object
                  required:
                  - TxnId
                  - TxnType
                  properties:
                    TxnId:
                      type: string
                      description: 'Transaction Id of the related transaction.'
                    TxnType:
                      type: string
                      description: 'Transaction type of the linked object.'
                    TxnLineId:
                      type: string
                      description: 'The line number of a specific line of the linked transaction. If supplied, the TxnId and TxnType attributes of the linked transaction must also be populated.'
        SyncToken:
          type: string
          description: 'Version number of the object. It is used to lock an object for use by one app at a time. As soon as an application modifies an object, its SyncToken is incremented. Attempts to modify an object specifying an older SyncToken fails. Only the latest version of the object is maintained by QuickBooks Online.'
        Id:
          type: string
          description: 'Unique identifier for this object. Sort order is ASC by default.'
        CustomerRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'The ID for the referenced object as found in the Id field of the object payload. The context is set by the type of reference and is specific to the QuickBooks company file.'
            name:
              type: string
              description: 'An identifying name for the object being referenced by value and is derived from the field that holds the common name of that object. This varies by context and specific type of object referenced. For example, references to a Customer object use Customer.DisplayName to populate this field. Optionally returned in responses, implementation dependent.'
        CurrencyRef:
          type: object
          required:
          - value
          properties:
            value:
              type: string
              description: 'A three letter string representing the ISO 4217 code for the currency. For example, USD, AUD, EUR, and so on.'
            name:
              type: string
              description: 'The full name of the currency.'
        CreditCardPayment:
          type: object
          description: 'Information about a payment received by credit card. Inject with data only if the payment was transacted through Intuit Payments API.'
          properties:
            CreditChargeResponse:
              type: object
              description: 'Holds credit-card transaction response information from a merchant account service'
              properties:
                Status:
                  type: string
                  description: 'Indicates the status of the payment transaction. Possible values include Completed, Unknown.'
                AuthCode:
                  type: string
                  description: 'Code returned from the credit card processor to indicate that the charge will be paid by the card issuer.'
                TxnAuthorizationTime:
                  type: object
                  properties:
                    dateTime:
                      type: string
                      description: 'Local time zone: YYYY-MM-DDTHH:MM:SS UTC: YYYY-MM-DDT HH :MM: SSZ Specific time zone: YYYY-MM-DDT HH :MM:SS +/- HH :MM'
                CCTransId:
                  type: string
                  description: 'Unique identifier of the payment transaction. It can be used to track the status of transactions, or to search transactions.'
            CreditChargeInfo:
              type: object
              description: 'Holds creditcard information to request a credit card payment from a merchant account service'
              properties:
                CcExpiryMonth:
                  type: number
                  description: 'Expiration Month on card, expressed as a number: 1=January, 2=February, etc'
                ProcessPayment:
                  type: boolean
                  description: 'false or no value-Store credit card information only. Do not store QuickBooks Payment transaction information in CreditChargeResponse. -true-Store credit card payment transaction information in CreditChargeResponse below. Use this setting when QuickBooks Payments is configured to process credit card charges.'
                PostalCode:
                  type: string
                  description: 'Credit card holder billing postal code. Five digits in the USA'
                Amount:
                  type: number
                  description: 'The amount processed using the credit card.'
                NameOnAcct:
                  type: string
                  description: 'Account holder name, as printed on the card.'
                CcExpiryYear:
                  type: number
                  description: 'Expiration Year on card, expressed as a 4 digit number 1999, 2003, etc.'
                Type:
                  type: string
                  description: 'Type of credit card. For example, MasterCard, Visa, Discover, American Express, and so on.'
                BillAddrStreet:
                  type: string
                  description: 'Credit card holder billing address of record: the street address to which credit card statements are sent.'